{"ast":null,"code":"var _jsxFileName = \"/home/kuldeep/Git Hub/Vemshala-Admin/src/page/ProductVariants/ProductVariants.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Select, Form, Row, Col, Button, message, Divider, Alert, InputNumber, Table, Switch, Space, Popconfirm, Input } from \"antd\";\nimport _ from \"lodash\";\nimport { DeleteOutlined } from \"@ant-design/icons\";\n/* custom component */\n\nimport Header from \"../../component/Header/Header\";\nimport { PageContainer } from \"../../component/Xcomponent\";\nimport ProductTabs from \"../../component/ProductTabs/ProductTabs\";\n/* actions */\n\nimport { getProductView, getProductViewReset } from \"../../action/getProductViewAction\";\nimport { getAttributeList, getAttributeListReset } from \"../../action/getAttributeListAction\";\nimport { saveAttributeForVariants, saveAttributeForVariantsReset } from \"../../action/saveAttributeForVariantsAction\";\nimport { createProductVariant, createProductVariantReset } from \"../../action/createProductVariantAction\";\nimport { getProductVariantList, getProductVariantListReset } from \"../../action/getProductVariantListAction\";\nimport { saveSpProdData, saveSpProdDataReset } from \"../../action/saveSpProdDataAction\";\nimport { saveSpImgData, saveSpImgDataReset } from \"../../action/saveSpImgDataAction\";\nimport { delProdVar, delProdVarReset } from \"../../action/delProdVarAction\";\n\nconst ProductVariants = props => {\n  /* variables */\n  const product_id = props.match.params.product_id;\n  const {\n    getProductView,\n    getProductViewReset,\n    getProductViewState,\n    getAttributeList,\n    getAttributeListReset,\n    getAttributeListState,\n    saveAttributeForVariants,\n    saveAttributeForVariantsReset,\n    saveAttributeForVariantsState,\n    createProductVariant,\n    createProductVariantReset,\n    createProductVariantState,\n    getProductVariantList,\n    getProductVariantListReset,\n    getProductVariantListState,\n    saveSpProdData,\n    saveSpProdDataReset,\n    saveSpProdDataState,\n    saveSpImgData,\n    saveSpImgDataReset,\n    saveSpImgDataState,\n    delProdVar,\n    delProdVarReset,\n    delProdVarState\n  } = props;\n  const [attributes_for_variants, set_attributes_for_variants] = useState([]);\n  const [refresh, setRefresh] = useState(0);\n  const [form] = Form.useForm();\n  const [form2] = Form.useForm();\n  const [form3] = Form.useForm();\n  const [variant_data, set_variant_data] = useState({\n    attributes: [],\n    stock: 0,\n    price: 0,\n    product_id: product_id\n  });\n  const [columns, set_columns] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [separateProductData, setSeparateProductData] = useState({\n    product_id: product_id,\n    display_separate: false,\n    attribute_id: \"\"\n  });\n  const [separateImgData, setSeparateImgData] = useState({\n    product_id: product_id,\n    display_separate: false,\n    attribute_id: \"\"\n  });\n  /* callbacks */\n\n  useEffect(() => {\n    return () => {\n      getProductViewReset();\n      getAttributeListReset();\n      saveAttributeForVariantsReset();\n      createProductVariantReset();\n      getProductVariantListReset();\n      saveSpProdDataReset();\n      saveSpImgDataReset();\n      delProdVarReset();\n    };\n  }, []);\n  useEffect(() => {\n    getProductView({\n      product_id: product_id\n    });\n    getAttributeList({\n      nature: \"variant\"\n    });\n  }, [refresh]);\n  useEffect(() => {\n    if (getProductViewState.apiState === \"success\") {\n      if (getProductViewState.product.attributes_for_variants) {\n        form.setFieldsValue({\n          attributes_for_variants: getProductViewState.product.attributes_for_variants.split(\",\")\n        });\n        set_attributes_for_variants(getProductViewState.product.attributes_for_variants.split(\",\"));\n      }\n\n      if (getProductViewState.product.variant_count > 0) {\n        getProductVariantList({\n          product_id: product_id\n        });\n      }\n\n      form2.setFieldsValue({\n        display_separate: getProductViewState.product.display_separate_product_by_attribute ? true : false,\n        display_separate_attribute_id: getProductViewState.product.display_separate_product_by_attribute\n      });\n      setSeparateProductData({ ...separateProductData,\n        [\"display_separate\"]: getProductViewState.product.display_separate_product_by_attribute ? true : false,\n        [\"attribute_id\"]: getProductViewState.product.display_separate_product_by_attribute\n      });\n      form3.setFieldsValue({\n        display_separate_img: getProductViewState.product.attribute_for_separate_images ? true : false,\n        display_separate_img_attribute_id: getProductViewState.product.attribute_for_separate_images\n      });\n      setSeparateImgData({ ...separateImgData,\n        [\"display_separate\"]: getProductViewState.product.attribute_for_separate_images ? true : false,\n        [\"attribute_id\"]: getProductViewState.product.attribute_for_separate_images\n      });\n    }\n  }, [getProductViewState]);\n  useEffect(() => {\n    if (saveAttributeForVariantsState.apiState === \"success\") {\n      message.success(saveAttributeForVariantsState.message);\n      setRefresh(refresh + 1);\n      saveAttributeForVariantsReset();\n    }\n\n    if (saveAttributeForVariantsState.apiState === \"error\") {\n      saveAttributeForVariantsReset();\n      message.error(saveAttributeForVariantsState.message);\n    }\n  }, [saveAttributeForVariantsState]);\n  useEffect(() => {\n    if (createProductVariantState.apiState === \"success\") {\n      setRefresh(refresh + 1);\n      createProductVariantReset();\n      message.success(createProductVariantState.message);\n    }\n\n    if (createProductVariantState.apiState === \"error\") {\n      createProductVariantReset();\n      message.error(createProductVariantState.message);\n    }\n  }, [createProductVariantState]);\n  useEffect(() => {\n    if (getProductVariantListState.apiState === \"success\") {\n      let columns = [];\n      getProductVariantListState.list[0].attributes.map(obj => {\n        columns.push({\n          title: obj.name,\n          dataIndex: obj.name,\n          key: obj.name\n        });\n      });\n      columns.push({\n        title: \"Name\",\n        dataIndex: \"name\",\n        key: \"name\"\n      }, {\n        title: \"Price\",\n        dataIndex: \"price\",\n        key: \"Price\"\n      }, {\n        title: \"Is Sale Price\",\n        dataIndex: \"is_sale_price\",\n        key: \"is_sale_price\"\n      }, {\n        title: \"Sale Price\",\n        dataIndex: \"sale_price\",\n        key: \"sale_price\"\n      }, {\n        title: \"Stock\",\n        dataIndex: \"stock\",\n        key: \"Stock\"\n      }, {\n        title: 'Action',\n        dataIndex: 'id',\n        key: 'action',\n        render: id => /*#__PURE__*/React.createElement(Popconfirm, {\n          title: \"Are you sure to delete this variant?\",\n          onConfirm: () => delProdVar({\n            product_id: product_id,\n            product_variant_id: id\n          }),\n          okText: \"Delete\",\n          cancelText: \"Cancel\",\n          okType: \"danger\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          size: \"small\",\n          icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 52\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }\n        }))\n      });\n      set_columns(columns);\n      let tableData = [];\n      getProductVariantListState.list.map(p => {\n        let rowObj = {};\n        rowObj.key = p.id;\n        rowObj.name = p.name;\n        rowObj.price = p.price;\n        rowObj.is_sale_price = p.is_sale_price;\n        rowObj.sale_price = p.sale_price;\n        rowObj.stock = p.stock;\n        rowObj.id = p.id;\n        p.attributes.map(obj => {\n          rowObj[obj.name] = obj.option_value;\n        });\n        tableData.push(rowObj);\n      });\n      setTableData(tableData);\n    }\n  }, [getProductVariantListState]);\n  useEffect(() => {\n    if (saveSpProdDataState.apiState === \"success\") {\n      setRefresh(refresh + 1);\n      saveSpProdDataReset();\n      message.success(saveSpProdDataState.message);\n    }\n\n    if (saveSpProdDataState.apiState === \"error\") {\n      saveSpProdDataReset();\n      message.error(saveSpProdDataState.message);\n    }\n  }, [saveSpProdDataState]);\n  useEffect(() => {\n    if (saveSpImgDataState.apiState === \"success\") {\n      setRefresh(refresh + 1);\n      saveSpImgDataReset();\n      message.success(saveSpImgDataState.message);\n    }\n\n    if (saveSpImgDataState.apiState === \"error\") {\n      saveSpImgDataReset();\n      message.error(saveSpImgDataState.message);\n    }\n  }, [saveSpImgDataState]);\n  useEffect(() => {\n    if (delProdVarState.apiState === \"success\") {\n      message.success(delProdVarState.message);\n      setRefresh(refresh + 1);\n      delProdVarReset();\n    }\n\n    if (delProdVarState.apiState === \"error\") {\n      delProdVarReset();\n      message.error(delProdVarState.message);\n    }\n  }, [delProdVarState]);\n  /* functions */\n\n  const handleAttributeForVariantsSubmit = () => {\n    saveAttributeForVariants({\n      product_id: product_id,\n      attributes: attributes_for_variants\n    });\n  };\n\n  const handleAttributeChange = obj => {\n    let arr = variant_data.attributes;\n\n    if (_.findIndex(arr, {\n      'attr_id': obj.attr_id\n    }) > -1) {\n      arr = arr.filter(item => item.attr_id !== obj.attr_id);\n    }\n\n    arr.push(obj);\n    set_variant_data({ ...variant_data,\n      ['attributes']: arr\n    });\n  };\n\n  const renderVariantForm = () => {\n    let jsx = [];\n    getAttributeListState.list.map(attr => {\n      let attributes_for_variants = getProductViewState.product.attributes_for_variants.split(\",\");\n\n      if (attributes_for_variants.includes(attr.id)) {\n        jsx.push( /*#__PURE__*/React.createElement(Col, {\n          span: \"6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Form.Item, {\n          name: `attribute_${attr.id}`,\n          label: `${attr.name}`,\n          rules: [{\n            required: true,\n            message: 'Required'\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Select, {\n          onChange: v => handleAttributeChange({\n            attr_id: attr.id,\n            option_id: v\n          }),\n          placeholder: `Select ${attr.name}`,\n          name: `attribute_${attr.id}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 29\n          }\n        }, attr.options.map(option => /*#__PURE__*/React.createElement(Select.Option, {\n          key: option.id,\n          value: option.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 37\n          }\n        }, option.option_value))))));\n      }\n    });\n    jsx.push( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n      span: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"name\",\n      label: \"Name\",\n      rules: [{\n        required: true,\n        message: 'Required'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      name: \"name\",\n      placeholder: \"Enter Name\",\n      onChange: e => set_variant_data({ ...variant_data,\n        [\"name\"]: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      span: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"price\",\n      label: \"Price\",\n      rules: [{\n        required: true,\n        message: 'Required'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      name: \"price\",\n      placeholder: \"Enter Price\",\n      style: {\n        width: \"100%\"\n      },\n      onChange: v => set_variant_data({ ...variant_data,\n        [\"price\"]: v\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      span: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"is_sale_price\",\n      label: \"Set Sale Price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      name: \"is_sale_price\",\n      placeholder: \"Select Sale Price Rule\",\n      defaultValue: \"no\",\n      onSelect: v => set_variant_data({ ...variant_data,\n        [\"is_sale_price\"]: v\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Select.Option, {\n      key: \"yes\",\n      value: \"yes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 29\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(Select.Option, {\n      key: \"no\",\n      value: \"no\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 29\n      }\n    }, \"No\")))), /*#__PURE__*/React.createElement(Col, {\n      span: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"sale_price\",\n      label: \"Sale Price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      name: \"sale_price\",\n      placeholder: \"Enter Sale Price\",\n      style: {\n        width: \"100%\"\n      },\n      onChange: v => set_variant_data({ ...variant_data,\n        [\"sale_price\"]: v\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      span: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"stock\",\n      label: \"Stock\",\n      rules: [{\n        required: true,\n        message: 'Required'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      name: \"stock\",\n      placeholder: \"Enter Stock\",\n      style: {\n        width: \"100%\"\n      },\n      onChange: v => set_variant_data({ ...variant_data,\n        [\"stock\"]: v\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 25\n      }\n    })))));\n    return jsx;\n  };\n\n  const handleCreateVariantSubmit = () => {\n    createProductVariant(variant_data);\n  };\n\n  const handleSpProdDataSub = () => {\n    if (separateProductData.display_separate) {\n      if (!separateProductData.attribute_id) {\n        alert(\"Select an attribute\");\n        return;\n      }\n    }\n\n    saveSpProdData(separateProductData);\n  };\n\n  const handleSpImgDataSub = () => {\n    if (separateImgData.display_separate) {\n      if (!separateImgData.attribute_id) {\n        alert(\"Select an attribute\");\n        return;\n      }\n    }\n\n    saveSpImgData(separateImgData);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    title: \"Edit Product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 13\n    }\n  }, getProductViewState.apiState === \"success\" && getAttributeListState.apiState === \"success\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductTabs, {\n    id: getProductViewState.product.id,\n    active: \"variants\",\n    type: getProductViewState.product.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 25\n    }\n  }), getProductViewState.product.variant_count === 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: \"18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    layout: \"vertical\",\n    onFinish: handleAttributeForVariantsSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"attributes_for_variants\",\n    label: \"Select attributes to create variants\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    onChange: v => set_attributes_for_variants(v),\n    placeholder: \"Select attributes to create variants\",\n    mode: \"multiple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 49\n    }\n  }, getAttributeListState.list.map(attr => /*#__PURE__*/React.createElement(Select.Option, {\n    key: attr.id,\n    value: attr.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 57\n    }\n  }, `${attr.name} (${attr.type})`)))), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 45\n    }\n  }, \"NEXT\")))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 33\n    }\n  })), getProductViewState.product.variant_count > 0 && /*#__PURE__*/React.createElement(Alert, {\n    message: \"Do you want to change attribute set for product variant? For that you need to delete below variants.\",\n    type: \"info\",\n    showIcon: true,\n    style: {\n      marginBottom: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 29\n    }\n  }), getProductViewState.product.attributes_for_variants && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 33\n    }\n  }, \"Create Variant\"), /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    onFinish: handleCreateVariantSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 37\n    }\n  }, renderVariantForm()), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 37\n    }\n  }, \"CREATE VARIANT\")), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 33\n    }\n  })), getProductVariantListState.list.length > 0 && /*#__PURE__*/React.createElement(Table, {\n    dataSource: tableData,\n    columns: columns,\n    size: \"small\",\n    pagination: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 29\n    }\n  }), getProductViewState.product.attributes_for_variants && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      marginTop: 24\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 33\n    }\n  }, \"Do you want to display separate images by attribute?\"), /*#__PURE__*/React.createElement(Form, {\n    form: form3,\n    layout: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"display_separate_img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    name: \"display_separate_img\",\n    onChange: checked => setSeparateImgData({ ...separateImgData,\n      [\"display_separate\"]: checked\n    }),\n    defaultChecked: getProductViewState.product.attribute_for_separate_images ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 49\n    }\n  }))), separateImgData.display_separate && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"display_separate_img_attribute_id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    onChange: v => setSeparateImgData({ ...separateImgData,\n      [\"attribute_id\"]: v\n    }),\n    placeholder: \"Select attribute\",\n    style: {\n      width: \"100%\"\n    },\n    name: \"display_separate_img_attribute_id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 57\n    }\n  }, getAttributeListState.list.map(attr => {\n    if (attributes_for_variants.includes(attr.id)) {\n      return /*#__PURE__*/React.createElement(Select.Option, {\n        key: attr.id,\n        value: attr.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 73\n        }\n      }, `${attr.name}`);\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    span: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: handleSpImgDataSub,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 45\n    }\n  }, \"SAVE\"))))))));\n};\n\nconst mapStateToProps = state => ({\n  getProductViewState: state.getProductView,\n  getAttributeListState: state.getAttributeList,\n  saveAttributeForVariantsState: state.saveAttributeForVariants,\n  createProductVariantState: state.createProductVariant,\n  getProductVariantListState: state.getProductVariantList,\n  saveSpProdDataState: state.saveSpProdData,\n  saveSpImgDataState: state.saveSpImgData,\n  delProdVarState: state.delProdVar\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getProductView: params => dispatch(getProductView(params)),\n  getProductViewReset: () => dispatch(getProductViewReset()),\n  getAttributeList: params => dispatch(getAttributeList(params)),\n  getAttributeListReset: () => dispatch(getAttributeListReset()),\n  saveAttributeForVariants: params => dispatch(saveAttributeForVariants(params)),\n  saveAttributeForVariantsReset: () => dispatch(saveAttributeForVariantsReset()),\n  createProductVariant: params => dispatch(createProductVariant(params)),\n  createProductVariantReset: () => dispatch(createProductVariantReset()),\n  getProductVariantList: params => dispatch(getProductVariantList(params)),\n  getProductVariantListReset: () => dispatch(getProductVariantListReset()),\n  saveSpProdData: params => dispatch(saveSpProdData(params)),\n  saveSpProdDataReset: () => dispatch(saveSpProdDataReset()),\n  saveSpImgData: params => dispatch(saveSpImgData(params)),\n  saveSpImgDataReset: () => dispatch(saveSpImgDataReset()),\n  delProdVar: params => dispatch(delProdVar(params)),\n  delProdVarReset: () => dispatch(delProdVarReset())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductVariants);","map":{"version":3,"names":["React","useState","useEffect","connect","Select","Form","Row","Col","Button","message","Divider","Alert","InputNumber","Table","Switch","Space","Popconfirm","Input","_","DeleteOutlined","Header","PageContainer","ProductTabs","getProductView","getProductViewReset","getAttributeList","getAttributeListReset","saveAttributeForVariants","saveAttributeForVariantsReset","createProductVariant","createProductVariantReset","getProductVariantList","getProductVariantListReset","saveSpProdData","saveSpProdDataReset","saveSpImgData","saveSpImgDataReset","delProdVar","delProdVarReset","ProductVariants","props","product_id","match","params","getProductViewState","getAttributeListState","saveAttributeForVariantsState","createProductVariantState","getProductVariantListState","saveSpProdDataState","saveSpImgDataState","delProdVarState","attributes_for_variants","set_attributes_for_variants","refresh","setRefresh","form","useForm","form2","form3","variant_data","set_variant_data","attributes","stock","price","columns","set_columns","tableData","setTableData","separateProductData","setSeparateProductData","display_separate","attribute_id","separateImgData","setSeparateImgData","nature","apiState","product","setFieldsValue","split","variant_count","display_separate_product_by_attribute","display_separate_attribute_id","display_separate_img","attribute_for_separate_images","display_separate_img_attribute_id","success","error","list","map","obj","push","title","name","dataIndex","key","render","id","product_variant_id","p","rowObj","is_sale_price","sale_price","option_value","handleAttributeForVariantsSubmit","handleAttributeChange","arr","findIndex","attr_id","filter","item","renderVariantForm","jsx","attr","includes","required","v","option_id","options","option","e","target","value","width","handleCreateVariantSubmit","handleSpProdDataSub","alert","handleSpImgDataSub","type","marginBottom","length","marginTop","checked","mapStateToProps","state","mapDispatchToProps","dispatch"],"sources":["/home/kuldeep/Git Hub/Vemshala-Admin/src/page/ProductVariants/ProductVariants.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport {\n    Select, Form, Row, Col, Button, message, Divider, Alert, InputNumber, Table, Switch,\n    Space, Popconfirm, Input\n} from \"antd\"\nimport _ from \"lodash\"\nimport { DeleteOutlined } from \"@ant-design/icons\"\n\n/* custom component */\nimport Header from \"../../component/Header/Header\"\nimport { PageContainer } from \"../../component/Xcomponent\"\nimport ProductTabs from \"../../component/ProductTabs/ProductTabs\"\n\n/* actions */\nimport { getProductView, getProductViewReset } from \"../../action/getProductViewAction\"\nimport { getAttributeList, getAttributeListReset } from \"../../action/getAttributeListAction\"\nimport { saveAttributeForVariants, saveAttributeForVariantsReset } from \"../../action/saveAttributeForVariantsAction\"\nimport { createProductVariant, createProductVariantReset } from \"../../action/createProductVariantAction\"\nimport { getProductVariantList, getProductVariantListReset } from \"../../action/getProductVariantListAction\"\nimport { saveSpProdData, saveSpProdDataReset } from \"../../action/saveSpProdDataAction\"\nimport { saveSpImgData, saveSpImgDataReset } from \"../../action/saveSpImgDataAction\"\nimport { delProdVar, delProdVarReset } from \"../../action/delProdVarAction\"\n\nconst ProductVariants = props => {\n    /* variables */\n    const product_id = props.match.params.product_id\n    const {\n        getProductView, getProductViewReset, getProductViewState,\n        getAttributeList, getAttributeListReset, getAttributeListState,\n        saveAttributeForVariants, saveAttributeForVariantsReset, saveAttributeForVariantsState,\n        createProductVariant, createProductVariantReset, createProductVariantState,\n        getProductVariantList, getProductVariantListReset, getProductVariantListState,\n        saveSpProdData, saveSpProdDataReset, saveSpProdDataState,\n        saveSpImgData, saveSpImgDataReset, saveSpImgDataState,\n        delProdVar, delProdVarReset, delProdVarState,\n    } = props\n    const [attributes_for_variants, set_attributes_for_variants] = useState([])\n    const [refresh, setRefresh] = useState(0)\n    const [form] = Form.useForm()\n    const [form2] = Form.useForm()\n    const [form3] = Form.useForm()\n    const [variant_data, set_variant_data] = useState({\n        attributes: [],\n        stock: 0,\n        price: 0,\n        product_id: product_id\n    })\n    const [columns, set_columns] = useState([])\n    const [tableData, setTableData] = useState([])\n    const [separateProductData, setSeparateProductData] = useState({\n        product_id: product_id,\n        display_separate: false,\n        attribute_id: \"\"\n    })\n    const [separateImgData, setSeparateImgData] = useState({\n        product_id: product_id,\n        display_separate: false,\n        attribute_id: \"\"\n    })\n\n    /* callbacks */\n    useEffect(() => {\n        return (() => {\n            getProductViewReset()\n            getAttributeListReset()\n            saveAttributeForVariantsReset()\n            createProductVariantReset()\n            getProductVariantListReset()\n            saveSpProdDataReset()\n            saveSpImgDataReset()\n            delProdVarReset()\n        })\n    }, [])\n\n\n    useEffect(() => {\n        getProductView({\n            product_id: product_id\n        })\n        getAttributeList({\n            nature: \"variant\"\n        })\n    }, [refresh])\n\n    useEffect(() => {\n        if (getProductViewState.apiState === \"success\") {\n            if (getProductViewState.product.attributes_for_variants) {\n                form.setFieldsValue({\n                    attributes_for_variants: getProductViewState.product.attributes_for_variants.split(\",\")\n                })\n                set_attributes_for_variants(getProductViewState.product.attributes_for_variants.split(\",\"))\n            }\n\n            if (getProductViewState.product.variant_count > 0) {\n                getProductVariantList({ product_id: product_id })\n            }\n\n            form2.setFieldsValue({\n                display_separate: getProductViewState.product.display_separate_product_by_attribute ? true : false,\n                display_separate_attribute_id: getProductViewState.product.display_separate_product_by_attribute,\n            })\n            setSeparateProductData({\n                ...separateProductData,\n                [\"display_separate\"]: getProductViewState.product.display_separate_product_by_attribute ? true : false,\n                [\"attribute_id\"]: getProductViewState.product.display_separate_product_by_attribute\n            })\n\n            form3.setFieldsValue({\n                display_separate_img: getProductViewState.product.attribute_for_separate_images ? true : false,\n                display_separate_img_attribute_id: getProductViewState.product.attribute_for_separate_images,\n            })\n            setSeparateImgData({\n                ...separateImgData,\n                [\"display_separate\"]: getProductViewState.product.attribute_for_separate_images ? true : false,\n                [\"attribute_id\"]: getProductViewState.product.attribute_for_separate_images\n            })\n\n        }\n    }, [getProductViewState])\n\n    useEffect(() => {\n        if (saveAttributeForVariantsState.apiState === \"success\") {\n            message.success(saveAttributeForVariantsState.message);\n            setRefresh(refresh + 1)\n            saveAttributeForVariantsReset()\n        }\n\n        if (saveAttributeForVariantsState.apiState === \"error\") {\n            saveAttributeForVariantsReset()\n            message.error(saveAttributeForVariantsState.message);\n        }\n    }, [saveAttributeForVariantsState])\n\n    useEffect(() => {\n        if (createProductVariantState.apiState === \"success\") {\n            setRefresh(refresh + 1)\n            createProductVariantReset()\n            message.success(createProductVariantState.message);\n        }\n\n        if (createProductVariantState.apiState === \"error\") {\n            createProductVariantReset()\n            message.error(createProductVariantState.message);\n        }\n    }, [createProductVariantState])\n\n    useEffect(() => {\n        if (getProductVariantListState.apiState === \"success\") {\n            let columns = []\n\n            getProductVariantListState.list[0].attributes.map(obj => {\n                columns.push({\n                    title: obj.name,\n                    dataIndex: obj.name,\n                    key: obj.name,\n                })\n            })\n            columns.push({\n                title: \"Name\",\n                dataIndex: \"name\",\n                key: \"name\",\n            }, {\n                title: \"Price\",\n                dataIndex: \"price\",\n                key: \"Price\",\n            }, {\n                title: \"Is Sale Price\",\n                dataIndex: \"is_sale_price\",\n                key: \"is_sale_price\",\n            }, {\n                title: \"Sale Price\",\n                dataIndex: \"sale_price\",\n                key: \"sale_price\",\n            }, {\n                title: \"Stock\",\n                dataIndex: \"stock\",\n                key: \"Stock\",\n            }, {\n                title: 'Action',\n                dataIndex: 'id',\n                key: 'action',\n                render: (id) => (\n                    <Popconfirm\n                        title=\"Are you sure to delete this variant?\"\n                        onConfirm={() => delProdVar({\n                            product_id: product_id,\n                            product_variant_id: id\n                        })}\n                        okText=\"Delete\"\n                        cancelText=\"Cancel\"\n                        okType=\"danger\"\n                    >\n                        <Button size=\"small\" icon={<DeleteOutlined />} />\n                    </Popconfirm>\n                )\n            })\n            set_columns(columns)\n\n            let tableData = []\n            getProductVariantListState.list.map(p => {\n                let rowObj = {}\n                rowObj.key = p.id\n                rowObj.name = p.name\n                rowObj.price = p.price\n                rowObj.is_sale_price = p.is_sale_price\n                rowObj.sale_price = p.sale_price\n                rowObj.stock = p.stock\n                rowObj.id = p.id\n                p.attributes.map(obj => {\n                    rowObj[obj.name] = obj.option_value\n                })\n                tableData.push(rowObj)\n            })\n            setTableData(tableData)\n        }\n    }, [getProductVariantListState])\n\n    useEffect(() => {\n        if (saveSpProdDataState.apiState === \"success\") {\n            setRefresh(refresh + 1)\n            saveSpProdDataReset()\n            message.success(saveSpProdDataState.message);\n        }\n\n        if (saveSpProdDataState.apiState === \"error\") {\n            saveSpProdDataReset()\n            message.error(saveSpProdDataState.message);\n        }\n    }, [saveSpProdDataState])\n\n    useEffect(() => {\n        if (saveSpImgDataState.apiState === \"success\") {\n            setRefresh(refresh + 1)\n            saveSpImgDataReset()\n            message.success(saveSpImgDataState.message);\n        }\n\n        if (saveSpImgDataState.apiState === \"error\") {\n            saveSpImgDataReset()\n            message.error(saveSpImgDataState.message);\n        }\n    }, [saveSpImgDataState])\n\n    useEffect(() => {\n        if (delProdVarState.apiState === \"success\") {\n            message.success(delProdVarState.message);\n            setRefresh(refresh + 1)\n            delProdVarReset()\n        }\n\n        if (delProdVarState.apiState === \"error\") {\n            delProdVarReset()\n            message.error(delProdVarState.message);\n        }\n    }, [delProdVarState])\n\n\n    /* functions */\n    const handleAttributeForVariantsSubmit = () => {\n        saveAttributeForVariants({\n            product_id: product_id,\n            attributes: attributes_for_variants\n        })\n    }\n\n    const handleAttributeChange = (obj) => {\n        let arr = variant_data.attributes\n        if (_.findIndex(arr, { 'attr_id': obj.attr_id }) > -1) {\n            arr = arr.filter(item => item.attr_id !== obj.attr_id)\n        }\n        arr.push(obj)\n        set_variant_data({ ...variant_data, ['attributes']: arr })\n    }\n\n    const renderVariantForm = () => {\n        let jsx = []\n        getAttributeListState.list.map(attr => {\n            let attributes_for_variants = getProductViewState.product.attributes_for_variants.split(\",\")\n            if (attributes_for_variants.includes(attr.id)) {\n                jsx.push(\n                    <Col span=\"6\">\n                        <Form.Item\n                            name={`attribute_${attr.id}`}\n                            label={`${attr.name}`}\n                            rules={[{ required: true, message: 'Required' }]}\n                        >\n                            <Select\n                                onChange={v => handleAttributeChange({ attr_id: attr.id, option_id: v })}\n                                placeholder={`Select ${attr.name}`}\n                                name={`attribute_${attr.id}`}\n                            >\n                                {attr.options.map(option => (\n                                    <Select.Option key={option.id} value={option.id} >{option.option_value}</Select.Option>\n                                ))}\n                            </Select>\n                        </Form.Item>\n                    </Col>\n                )\n            }\n        })\n        jsx.push(\n            <>\n                <Col span=\"6\">\n                    <Form.Item\n                        name=\"name\"\n                        label=\"Name\"\n                        rules={[{ required: true, message: 'Required' }]}\n                    >\n                        <Input name=\"name\" placeholder=\"Enter Name\"\n                            onChange={e => set_variant_data({ ...variant_data, [\"name\"]: e.target.value })}\n                        />\n                    </Form.Item>\n                </Col>\n                <Col span=\"6\">\n                    <Form.Item\n                        name=\"price\"\n                        label=\"Price\"\n                        rules={[{ required: true, message: 'Required' }]}\n                    >\n                        <InputNumber name=\"price\" placeholder=\"Enter Price\" style={{ width: \"100%\" }}\n                            onChange={v => set_variant_data({ ...variant_data, [\"price\"]: v })}\n                        />\n                    </Form.Item>\n                </Col>\n                <Col span=\"6\">\n                    <Form.Item\n                        name=\"is_sale_price\"\n                        label=\"Set Sale Price\"\n                    >\n                        <Select name=\"is_sale_price\" placeholder=\"Select Sale Price Rule\" defaultValue=\"no\"\n                            onSelect={v => set_variant_data({ ...variant_data, [\"is_sale_price\"]: v })}\n                        >\n                            <Select.Option key=\"yes\" value=\"yes\">Yes</Select.Option>\n                            <Select.Option key=\"no\" value=\"no\">No</Select.Option>\n                        </Select>\n                    </Form.Item>\n                </Col>\n                <Col span=\"6\">\n                    <Form.Item\n                        name=\"sale_price\"\n                        label=\"Sale Price\"\n                    >\n                        <InputNumber name=\"sale_price\" placeholder=\"Enter Sale Price\" style={{ width: \"100%\" }}\n                            onChange={v => set_variant_data({ ...variant_data, [\"sale_price\"]: v })}\n                        />\n                    </Form.Item>\n                </Col>\n                <Col span=\"6\">\n                    <Form.Item\n                        name=\"stock\"\n                        label=\"Stock\"\n                        rules={[{ required: true, message: 'Required' }]}\n                    >\n                        <InputNumber name=\"stock\" placeholder=\"Enter Stock\" style={{ width: \"100%\" }}\n                            onChange={v => set_variant_data({ ...variant_data, [\"stock\"]: v })}\n                        />\n                    </Form.Item>\n                </Col>\n            </>\n        )\n        return jsx\n    }\n\n    const handleCreateVariantSubmit = () => {\n        createProductVariant(variant_data)\n    }\n\n    const handleSpProdDataSub = () => {\n        if (separateProductData.display_separate) {\n            if (!separateProductData.attribute_id) {\n                alert(\"Select an attribute\")\n                return\n            }\n        }\n\n        saveSpProdData(separateProductData)\n    }\n\n    const handleSpImgDataSub = () => {\n        if (separateImgData.display_separate) {\n            if (!separateImgData.attribute_id) {\n                alert(\"Select an attribute\")\n                return\n            }\n        }\n\n        saveSpImgData(separateImgData)\n    }\n\n    return (\n        <>\n            <Header\n                title=\"Edit Product\"\n            />\n            <PageContainer>\n                {(getProductViewState.apiState === \"success\" && getAttributeListState.apiState === \"success\") &&\n                    <>\n                        <ProductTabs id={getProductViewState.product.id} active=\"variants\" type={getProductViewState.product.type} />\n                        {getProductViewState.product.variant_count === 0 &&\n                            <>\n                                <Row >\n                                    <Col span=\"18\">\n                                        <Form form={form} layout=\"vertical\" onFinish={handleAttributeForVariantsSubmit}>\n                                            <Form.Item\n                                                name=\"attributes_for_variants\"\n                                                label=\"Select attributes to create variants\"\n                                                rules={[{ required: true, message: 'Required' }]}\n                                            >\n                                                <Select\n                                                    onChange={v => set_attributes_for_variants(v)}\n                                                    placeholder=\"Select attributes to create variants\"\n                                                    mode=\"multiple\"\n                                                >\n                                                    {getAttributeListState.list.map(attr => (\n                                                        <Select.Option key={attr.id} value={attr.id} >{`${attr.name} (${attr.type})`}</Select.Option>\n                                                    ))}\n                                                </Select>\n                                            </Form.Item>\n                                            <Button type=\"primary\" htmlType=\"submit\" >NEXT</Button>\n                                        </Form>\n                                    </Col>\n                                </Row>\n                                <Divider />\n                            </>\n                        }\n\n                        {getProductViewState.product.variant_count > 0 &&\n                            <Alert message=\"Do you want to change attribute set for product variant? For that you need to delete below variants.\"\n                                type=\"info\" showIcon style={{ marginBottom: 24 }} />\n                        }\n\n                        {getProductViewState.product.attributes_for_variants &&\n                            <>\n                                <h3>Create Variant</h3>\n                                <Form layout=\"vertical\" onFinish={handleCreateVariantSubmit} >\n                                    <Row gutter=\"20\" >\n                                        {renderVariantForm()}\n                                    </Row>\n                                    <Button type=\"primary\" htmlType=\"submit\" >CREATE VARIANT</Button>\n                                </Form>\n                                <Divider />\n                            </>\n                        }\n\n                        {(getProductVariantListState.list).length > 0 &&\n                            <Table dataSource={tableData} columns={columns} size=\"small\" pagination={false} />\n                        }\n\n                        {/* {getProductViewState.product.attributes_for_variants &&\n                            <>\n                                <h3 style={{ marginTop: 24 }} >Do you want to display separate products on product-list by attribute?</h3>\n\n                                <Form form={form2} layout=\"vertical\" >\n                                    <Row gutter=\"20\" >\n                                        <Col span={3}>\n                                            <Form.Item name=\"display_separate\">\n                                                <Switch name=\"display_separate\"\n                                                    onChange={(checked) => setSeparateProductData({ ...separateProductData, [\"display_separate\"]: checked })}\n                                                    defaultChecked={getProductViewState.product.display_separate_product_by_attribute ? true : false}\n                                                />\n                                            </Form.Item>\n                                        </Col>\n                                        {separateProductData.display_separate &&\n                                            <>\n                                                <Col span={8}>\n                                                    <Form.Item name=\"display_separate_attribute_id\">\n                                                        <Select\n                                                            onChange={v => setSeparateProductData({ ...separateProductData, [\"attribute_id\"]: v })}\n                                                            placeholder=\"Select attribute\"\n                                                            style={{ width: \"100%\" }}\n                                                            name=\"display_separate_attribute_id\"\n                                                        >\n                                                            {getAttributeListState.list.map(attr => {\n                                                                if (attributes_for_variants.includes(attr.id)) {\n                                                                    return (\n                                                                        <Select.Option key={attr.id} value={attr.id} >{`${attr.name}`}</Select.Option>\n                                                                    )\n                                                                }\n                                                            }\n                                                            )}\n                                                        </Select>\n                                                    </Form.Item>\n                                                </Col>\n\n                                            </>\n                                        }\n                                        <Col span={4}>\n                                            <Button type=\"primary\" onClick={handleSpProdDataSub} >SAVE</Button>\n                                        </Col>\n                                    </Row>\n                                </Form>\n                            </>\n                        } */}\n\n\n                        {getProductViewState.product.attributes_for_variants &&\n                            <>\n                                <h3 style={{ marginTop: 24 }} >Do you want to display separate images by attribute?</h3>\n\n                                <Form form={form3} layout=\"vertical\" >\n                                    <Row gutter=\"20\" >\n                                        <Col span={3}>\n                                            <Form.Item name=\"display_separate_img\">\n                                                <Switch name=\"display_separate_img\"\n                                                    onChange={(checked) => setSeparateImgData({ ...separateImgData, [\"display_separate\"]: checked })}\n                                                    defaultChecked={getProductViewState.product.attribute_for_separate_images ? true : false}\n                                                />\n                                            </Form.Item>\n                                        </Col>\n                                        {separateImgData.display_separate &&\n                                            <>\n                                                <Col span={8}>\n                                                    <Form.Item name=\"display_separate_img_attribute_id\">\n                                                        <Select\n                                                            onChange={v => setSeparateImgData({ ...separateImgData, [\"attribute_id\"]: v })}\n                                                            placeholder=\"Select attribute\"\n                                                            style={{ width: \"100%\" }}\n                                                            name=\"display_separate_img_attribute_id\"\n                                                        >\n                                                            {getAttributeListState.list.map(attr => {\n                                                                if (attributes_for_variants.includes(attr.id)) {\n                                                                    return (\n                                                                        <Select.Option key={attr.id} value={attr.id} >{`${attr.name}`}</Select.Option>\n                                                                    )\n                                                                }\n                                                            }\n                                                            )}\n                                                        </Select>\n                                                    </Form.Item>\n                                                </Col>\n\n                                            </>\n                                        }\n                                        <Col span={4}>\n                                            <Button type=\"primary\" onClick={handleSpImgDataSub} >SAVE</Button>\n                                        </Col>\n                                    </Row>\n                                </Form>\n                            </>\n                        }\n\n\n                    </>\n                }\n            </PageContainer>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    getProductViewState: state.getProductView,\n    getAttributeListState: state.getAttributeList,\n    saveAttributeForVariantsState: state.saveAttributeForVariants,\n    createProductVariantState: state.createProductVariant,\n    getProductVariantListState: state.getProductVariantList,\n    saveSpProdDataState: state.saveSpProdData,\n    saveSpImgDataState: state.saveSpImgData,\n    delProdVarState: state.delProdVar,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getProductView: (params) => dispatch(getProductView(params)),\n    getProductViewReset: () => dispatch(getProductViewReset()),\n    getAttributeList: (params) => dispatch(getAttributeList(params)),\n    getAttributeListReset: () => dispatch(getAttributeListReset()),\n    saveAttributeForVariants: (params) => dispatch(saveAttributeForVariants(params)),\n    saveAttributeForVariantsReset: () => dispatch(saveAttributeForVariantsReset()),\n    createProductVariant: (params) => dispatch(createProductVariant(params)),\n    createProductVariantReset: () => dispatch(createProductVariantReset()),\n    getProductVariantList: (params) => dispatch(getProductVariantList(params)),\n    getProductVariantListReset: () => dispatch(getProductVariantListReset()),\n    saveSpProdData: (params) => dispatch(saveSpProdData(params)),\n    saveSpProdDataReset: () => dispatch(saveSpProdDataReset()),\n    saveSpImgData: (params) => dispatch(saveSpImgData(params)),\n    saveSpImgDataReset: () => dispatch(saveSpImgDataReset()),\n    delProdVar: (params) => dispatch(delProdVar(params)),\n    delProdVarReset: () => dispatch(delProdVarReset()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductVariants)"],"mappings":"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"},"metadata":{},"sourceType":"module"}
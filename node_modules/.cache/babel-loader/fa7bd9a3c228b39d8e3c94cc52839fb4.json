{"ast":null,"code":"var _jsxFileName = \"/home/kuldeep/Git Hub/Vemshala-Admin/src/page/HomeSlider/HomeSlider.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Input, Row, Col, TreeSelect, Button, message, InputNumber, Divider, Popconfirm, Table } from \"antd\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport 'antd/dist/antd.css';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Modal, Upload } from 'antd';\n/* custom component */\n\nimport Header from \"../../component/Header/Header\";\nimport { PageContainer } from \"../../component/Xcomponent\";\n/* action */\n\nimport { saveSliderImages, saveSliderImagesReset } from \"../../action/saveSliderImagesAction\";\nimport { getSliderList, getSliderListReset } from \"../../action/getSliderListAction\";\nimport { delSlider, delSliderReset } from \"../../action/delSliderAction\";\n/* others */\n\nimport { validateImageFile, getS3SingedUrl } from \"../../utils\";\nimport cnf from \"../../config\";\n\nconst getBase64 = file => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => resolve(reader.result);\n\n  reader.onerror = error => reject(error);\n});\n\nconsole.error = () => null;\n\nconsole.warn = () => null;\n\nconst HomeSlider = props => {\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const [previewTitle, setPreviewTitle] = useState('');\n\n  const handleCancel = () => setPreviewVisible(false);\n\n  const handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    setPreviewImage(file.url || file.preview);\n    setPreviewVisible(true);\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\n  };\n  /* variables */\n\n\n  const {\n    saveSliderImages,\n    saveSliderImagesReset,\n    saveSliderImagesState,\n    getSliderList,\n    getSliderListReset,\n    getSliderListState,\n    delSlider,\n    delSliderReset,\n    delSliderState\n  } = props;\n  const initial_values = {\n    banner_img: \"\",\n    m_banner_img: \"\",\n    sequence: 0\n  };\n  const [formData, setFormData] = useState(initial_values);\n  const [redirect, setRedirect] = useState([false, '']);\n  const [banner_img, set_banner_img] = useState(null);\n  const [m_banner_img, set_m_banner_img] = useState(null);\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const [refresh, setRefresh] = useState(0);\n  const columns = [{\n    title: 'Image',\n    dataIndex: 'image',\n    key: 'image',\n    render: image => /*#__PURE__*/React.createElement(\"img\", {\n      src: `${cnf.s3_base_url}${image}`,\n      alt: \"\",\n      style: {\n        width: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    })\n  }, {\n    title: 'Mobile Image',\n    dataIndex: 'mobile_image',\n    key: 'mobile_image',\n    render: mobile_image => /*#__PURE__*/React.createElement(\"img\", {\n      src: `${cnf.s3_base_url}${mobile_image}`,\n      alt: \"\",\n      style: {\n        width: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 40\n      }\n    })\n  }, {\n    title: 'Sequence',\n    dataIndex: 'sequence',\n    key: 'sequence'\n  }, {\n    title: 'Action',\n    dataIndex: 'id',\n    key: 'action',\n    render: id => /*#__PURE__*/React.createElement(Popconfirm, {\n      title: \"Are you sure to delete this slider?\",\n      onConfirm: () => delSlider({\n        id: id\n      }),\n      okText: \"Delete\",\n      cancelText: \"Cancel\",\n      okType: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 48\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }))\n  }];\n  const [tableData, setTableData] = useState([]);\n  const [form] = Form.useForm();\n  /* callbakcs */\n\n  useEffect(() => {\n    return () => {\n      saveSliderImagesReset();\n      getSliderListReset();\n      delSliderReset();\n    };\n  }, []);\n  useEffect(() => {\n    getSliderList();\n  }, [refresh]);\n  useEffect(() => {\n    if (saveSliderImagesState.apiState === \"success\") {\n      setRefresh(refresh + 1);\n      form.resetFields();\n      setFormData(initial_values);\n      setSubmitLoading(false);\n      message.success(saveSliderImagesState.message);\n    }\n\n    if (saveSliderImagesState.apiState === \"error\") {\n      saveSliderImagesReset();\n      setSubmitLoading(false);\n      message.error(saveSliderImagesState.message);\n    }\n  }, [saveSliderImagesState]);\n  useEffect(() => {\n    if (delSliderState.apiState === \"success\") {\n      setRefresh(refresh + 1);\n      message.success(delSliderState.message);\n    }\n\n    if (delSliderState.apiState === \"error\") {\n      delSliderReset();\n      message.error(delSliderState.message);\n    }\n  }, [delSliderState]);\n  useEffect(() => {\n    if (getSliderListState.apiState === \"success\") {\n      let ar = [];\n      getSliderListState.list.map(obj => {\n        ar.push({\n          key: obj.id,\n          image: obj.image,\n          mobile_image: obj.m_image,\n          sequence: obj.sequence,\n          id: obj.id\n        });\n      });\n      setTableData(ar);\n    }\n  }, [getSliderListState]);\n  /* @image-preview ------------------------------------------------------------------------------------------------- */\n\n  const [desktopList, setDesktopFileList] = useState([]);\n  const [mobileList, setMobileFileList] = useState([]);\n\n  const desktopImageHandler = props => {\n    console.clear();\n    console.log(props);\n    set_banner_img(props.file.originFileObj);\n    setDesktopFileList(props.fileList);\n  };\n\n  const mobileImageHandler = props => {\n    set_m_banner_img(props.file.originFileObj);\n    setMobileFileList(props.fileList);\n  };\n  /* @api-call  ----------------------------------------------------------------------------------------------------- */\n\n\n  const handleSubmit = async () => {\n    let banner_img_filename = uuidv4();\n    let m_banner_img_filename = uuidv4();\n    let bannerImageValRes = validateImageFile(banner_img);\n    let mBannerImageValRes = validateImageFile(m_banner_img);\n\n    if (!bannerImageValRes.status) {\n      alert(\"Banner Image's extension is not allowed.\");\n      return;\n    }\n\n    if (!mBannerImageValRes.status) {\n      alert(\"Mobile Banner Image's extension is not allowed.\");\n      return;\n    }\n\n    setSubmitLoading(true);\n    let s3UrlRes2 = await getS3SingedUrl(banner_img_filename, bannerImageValRes.ext, banner_img);\n    await axios.put(s3UrlRes2.url, banner_img);\n    let s3UrlRes3 = await getS3SingedUrl(m_banner_img_filename, mBannerImageValRes.ext, m_banner_img);\n    await axios.put(s3UrlRes3.url, m_banner_img);\n    formData.banner_img = `${banner_img_filename}.${bannerImageValRes.ext}`;\n    formData.m_banner_img = `${m_banner_img_filename}.${mBannerImageValRes.ext}`;\n    saveSliderImages(formData);\n  };\n  /* code complete ------------------------------------------------------------------------------------------ */\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, redirect[0] && /*#__PURE__*/React.createElement(Redirect, {\n    to: redirect[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 42\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    title: \"Home Page Sliders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    layout: \"vertical\",\n    onFinish: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: \"24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"banner-image-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Upload, {\n    customRequest: _ref => {\n      let {\n        file,\n        onSuccess\n      } = _ref;\n      setTimeout(() => {\n        onSuccess(\"ok\");\n      }, 0);\n    },\n    listType: \"picture-card\",\n    fileList: desktopList,\n    onPreview: handlePreview,\n    onChange: desktopImageHandler,\n    accept: \"image/png, image/jpg, image/jpeg\",\n    name: \"desktop-banner-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(PlusOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 41\n    }\n  }, \"Upload\"))), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 33\n    }\n  }, \"Banner image for desktop\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 33\n    }\n  }, \"JPEG, JPG, PNG, WEBP | 3:2 Ratio  \"))), /*#__PURE__*/React.createElement(Col, {\n    span: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"banner-image-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Upload, {\n    customRequest: _ref2 => {\n      let {\n        file,\n        onSuccess\n      } = _ref2;\n      setTimeout(() => {\n        onSuccess(\"ok\");\n      }, 0);\n    },\n    listType: \"picture-card\",\n    fileList: mobileList,\n    onPreview: handlePreview,\n    onChange: mobileImageHandler,\n    accept: \"image/png, image/jpg, image/jpeg\",\n    name: \"mobile-banner-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(PlusOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 41\n    }\n  }, \"Upload\"))), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 33\n    }\n  }, \"Banner image for mobile\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 33\n    }\n  }, \"JPEG, JPG, PNG, WEBP | 3:2 Ratio  \"))), /*#__PURE__*/React.createElement(Col, {\n    span: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"banner-image-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Sequence\",\n    name: \"sequence\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    name: \"sequence\",\n    placeholder: \"Enter Sequence\",\n    style: {\n      width: \"100%\",\n      borderRadius: '8px'\n    },\n    onChange: value => setFormData({ ...formData,\n      [\"sequence\"]: value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    style: {\n      marginTop: '10px'\n    },\n    htmlType: \"submit\",\n    loading: submitLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 21\n    }\n  }, \"SUBMIT\")), /*#__PURE__*/React.createElement(Modal, {\n    visible: previewVisible,\n    title: previewTitle,\n    footer: null,\n    onCancel: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"example\",\n    style: {\n      width: '100%'\n    },\n    src: previewImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    dataSource: tableData,\n    columns: columns,\n    size: \"small\",\n    pagination: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  saveSliderImagesState: state.saveSliderImages,\n  getSliderListState: state.getSliderList,\n  delSliderState: state.delSlider\n});\n\nconst mapDispatchToProps = dispatch => ({\n  saveSliderImages: params => dispatch(saveSliderImages(params)),\n  saveSliderImagesReset: () => dispatch(saveSliderImagesReset()),\n  getSliderList: params => dispatch(getSliderList(params)),\n  getSliderListReset: () => dispatch(getSliderListReset()),\n  delSlider: params => dispatch(delSlider(params)),\n  delSliderReset: () => dispatch(delSliderReset())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeSlider);","map":{"version":3,"names":["React","useState","useEffect","Form","Input","Row","Col","TreeSelect","Button","message","InputNumber","Divider","Popconfirm","Table","Redirect","connect","v4","uuidv4","axios","DeleteOutlined","PlusOutlined","Modal","Upload","Header","PageContainer","saveSliderImages","saveSliderImagesReset","getSliderList","getSliderListReset","delSlider","delSliderReset","validateImageFile","getS3SingedUrl","cnf","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","console","warn","HomeSlider","props","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","handleCancel","handlePreview","url","preview","originFileObj","name","substring","lastIndexOf","saveSliderImagesState","getSliderListState","delSliderState","initial_values","banner_img","m_banner_img","sequence","formData","setFormData","redirect","setRedirect","set_banner_img","set_m_banner_img","submitLoading","setSubmitLoading","refresh","setRefresh","columns","title","dataIndex","key","render","image","s3_base_url","width","mobile_image","id","tableData","setTableData","form","useForm","apiState","resetFields","success","ar","list","map","obj","push","m_image","desktopList","setDesktopFileList","mobileList","setMobileFileList","desktopImageHandler","clear","log","fileList","mobileImageHandler","handleSubmit","banner_img_filename","m_banner_img_filename","bannerImageValRes","mBannerImageValRes","status","alert","s3UrlRes2","ext","put","s3UrlRes3","onSuccess","setTimeout","marginTop","required","borderRadius","value","mapStateToProps","state","mapDispatchToProps","dispatch","params"],"sources":["/home/kuldeep/Git Hub/Vemshala-Admin/src/page/HomeSlider/HomeSlider.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Form, Input, Row, Col, TreeSelect, Button, message, InputNumber, Divider, Popconfirm, Table } from \"antd\"\nimport { Redirect } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { v4 as uuidv4 } from 'uuid'\nimport axios from 'axios'\nimport { DeleteOutlined } from \"@ant-design/icons\"\nimport 'antd/dist/antd.css';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Modal, Upload } from 'antd';\n\n/* custom component */\nimport Header from \"../../component/Header/Header\"\nimport { PageContainer } from \"../../component/Xcomponent\"\n\n\n/* action */\nimport { saveSliderImages, saveSliderImagesReset } from \"../../action/saveSliderImagesAction\"\nimport { getSliderList, getSliderListReset } from \"../../action/getSliderListAction\"\nimport { delSlider, delSliderReset } from \"../../action/delSliderAction\"\n\n\n/* others */\nimport { validateImageFile, getS3SingedUrl } from \"../../utils\"\nimport cnf from \"../../config\"\n\n\n\nconst getBase64 = (file) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = (error) => reject(error);\n  });\n\n\n  console.error = () => null\n  console.warn = () => null\n\nconst HomeSlider = props => {\n\n    const [previewVisible, setPreviewVisible] = useState(false);\n    const [previewImage, setPreviewImage] = useState('');\n    const [previewTitle, setPreviewTitle] = useState('');\n    const handleCancel = () => setPreviewVisible(false);\n\n  const handlePreview = async (file) => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    setPreviewImage(file.url || file.preview);\n    setPreviewVisible(true);\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\n  };\n\n\n    /* variables */\n    const {\n        saveSliderImages, saveSliderImagesReset, saveSliderImagesState,\n        getSliderList, getSliderListReset, getSliderListState,\n        delSlider, delSliderReset, delSliderState,\n    } = props\n    const initial_values = {\n        banner_img: \"\",\n        m_banner_img: \"\",\n        sequence: 0,\n    }\n    const [formData, setFormData] = useState(initial_values)\n    const [redirect, setRedirect] = useState([false, ''])\n    const [banner_img, set_banner_img] = useState(null)\n    const [m_banner_img, set_m_banner_img] = useState(null)\n    const [submitLoading, setSubmitLoading] = useState(false)\n    const [refresh, setRefresh] = useState(0)\n    const columns = [\n        {\n            title: 'Image',\n            dataIndex: 'image',\n            key: 'image',\n            render: (image) => (<img src={`${cnf.s3_base_url}${image}`} alt=\"\" style={{ width: 100 }} />)\n        },\n        {\n            title: 'Mobile Image',\n            dataIndex: 'mobile_image',\n            key: 'mobile_image',\n            render: (mobile_image) => (<img src={`${cnf.s3_base_url}${mobile_image}`} alt=\"\" style={{ width: 100 }} />)\n        },\n        {\n            title: 'Sequence',\n            dataIndex: 'sequence',\n            key: 'sequence',\n        },\n        {\n            title: 'Action',\n            dataIndex: 'id',\n            key: 'action',\n            render: (id) => (\n                <Popconfirm\n                    title=\"Are you sure to delete this slider?\"\n                    onConfirm={() => delSlider({\n                        id: id,\n                    })}\n                    okText=\"Delete\"\n                    cancelText=\"Cancel\"\n                    okType=\"danger\"\n                >\n                    <Button size=\"small\" icon={<DeleteOutlined />} />\n                </Popconfirm>\n            )\n        }\n    ];\n    const [tableData, setTableData] = useState([])\n    const [form] = Form.useForm()\n\n    /* callbakcs */\n    useEffect(() => {\n        return (() => {\n            saveSliderImagesReset()\n            getSliderListReset()\n            delSliderReset()\n        })\n    }, [])\n\n    useEffect(() => {\n        getSliderList()\n    }, [refresh])\n\n    useEffect(() => {\n        if (saveSliderImagesState.apiState === \"success\") {\n            setRefresh(refresh + 1)\n            form.resetFields()\n            setFormData(initial_values)\n            setSubmitLoading(false)\n            message.success(saveSliderImagesState.message);\n        }\n\n        if (saveSliderImagesState.apiState === \"error\") {\n            saveSliderImagesReset()\n            setSubmitLoading(false)\n            message.error(saveSliderImagesState.message);\n        }\n    }, [saveSliderImagesState])\n\n\n    useEffect(() => {\n        if (delSliderState.apiState === \"success\") {\n            setRefresh(refresh + 1)\n            message.success(delSliderState.message);\n        }\n\n        if (delSliderState.apiState === \"error\") {\n            delSliderReset()\n            message.error(delSliderState.message);\n        }\n    }, [delSliderState])\n\n    useEffect(() => {\n        if (getSliderListState.apiState === \"success\") {\n            let ar = []\n            getSliderListState.list.map(obj => {\n                ar.push({\n                    key: obj.id,\n                    image: obj.image,\n                    mobile_image: obj.m_image,\n                    sequence: obj.sequence,\n                    id: obj.id,\n                })\n            })\n            setTableData(ar)\n        }\n    }, [getSliderListState])\n\n\n\n    /* @image-preview ------------------------------------------------------------------------------------------------- */\n\n        const [desktopList, setDesktopFileList] = useState([]);\n        const [mobileList,  setMobileFileList] = useState([]);\n\n        const desktopImageHandler = (props) => { \n\n            console.clear(); console.log(props)\n\n            set_banner_img(props.file.originFileObj);   setDesktopFileList(props.fileList); \n        }\n        \n        const mobileImageHandler  = (props) => { \n            set_m_banner_img(props.file.originFileObj); setMobileFileList(props.fileList);  \n        }\n        \n    /* @api-call  ----------------------------------------------------------------------------------------------------- */\n\n    const handleSubmit = async () => {\n\n        let banner_img_filename = uuidv4()\n        let m_banner_img_filename = uuidv4()\n\n        let bannerImageValRes = validateImageFile(banner_img)\n        let mBannerImageValRes = validateImageFile(m_banner_img)\n\n        if (!bannerImageValRes.status) {\n            alert(\"Banner Image's extension is not allowed.\")\n            return\n        }\n        if (!mBannerImageValRes.status) {\n            alert(\"Mobile Banner Image's extension is not allowed.\")\n            return\n        }\n\n        setSubmitLoading(true)\n\n        let s3UrlRes2 = await getS3SingedUrl(banner_img_filename, bannerImageValRes.ext, banner_img)\n        await axios.put(s3UrlRes2.url, banner_img)\n\n        let s3UrlRes3 = await getS3SingedUrl(m_banner_img_filename, mBannerImageValRes.ext, m_banner_img)\n        await axios.put(s3UrlRes3.url, m_banner_img)\n\n        formData.banner_img = `${banner_img_filename}.${bannerImageValRes.ext}`\n        formData.m_banner_img = `${m_banner_img_filename}.${mBannerImageValRes.ext}`\n\n        saveSliderImages(formData)\n    }\n\n    /* code complete ------------------------------------------------------------------------------------------ */\n\n    return (\n        <React.Fragment>{ redirect[0] && <Redirect to={redirect[1]} />}\n            <Header title=\"Home Page Sliders\"/>\n            <PageContainer>\n                <Form form={form} layout=\"vertical\" onFinish={handleSubmit} >\n                    <Row gutter=\"24\" >\n\n                        <Col span=\"8\">\n                            <div class=\"banner-image-container\">\n                                <Upload\n                                    customRequest={({ file, onSuccess }) => { setTimeout(() => { onSuccess(\"ok\"); }, 0) }}\n                                    listType=\"picture-card\"\n                                    fileList={desktopList}\n                                    onPreview={handlePreview}\n                                    onChange={desktopImageHandler}\n                                    accept=\"image/png, image/jpg, image/jpeg\"\n                                    name=\"desktop-banner-image\"\n                                >\n                                    <div>\n                                        <PlusOutlined></PlusOutlined>\n                                        <div style={{ marginTop: 8}}>Upload</div>\n                                    </div>\n                                </Upload>\n                                <h4>Banner image for desktop</h4>\n                                <span>JPEG, JPG, PNG, WEBP | 3:2 Ratio  </span>\n                            </div>\n                        </Col>\n\n                        <Col span=\"8\">\n                            <div class=\"banner-image-container\">\n                                <Upload\n                                    customRequest={({ file, onSuccess }) => { setTimeout(() => { onSuccess(\"ok\"); }, 0) }}\n                                    listType=\"picture-card\"\n                                    fileList={mobileList}\n                                    onPreview={handlePreview}\n                                    onChange={mobileImageHandler}\n                                    accept=\"image/png, image/jpg, image/jpeg\"\n                                    name=\"mobile-banner-image\"\n                                >\n                                    <div>\n                                        <PlusOutlined></PlusOutlined>\n                                        <div style={{ marginTop: 8}}>Upload</div>\n                                    </div>\n                                </Upload>\n                                <h4>Banner image for mobile</h4>\n                                <span>JPEG, JPG, PNG, WEBP | 3:2 Ratio  </span>\n                            </div>\n                        </Col>\n\n                          {/* <Col span=\"8\">\n                            <Form.Item\n                                label=\"Banner Image\"\n                                name=\"banner_img\"\n                                rules={[{ required: true, message: 'Required' }]}\n                                extra={<span>JPEG, JPG, PNG, WEBP | 4:1 Ratio  </span>}\n                            >\n                                <Input type=\"file\" name=\"m_banner_img\"\n                                    onChange={e => set_banner_img(e.target.files[0])}\n                                />\n                            </Form.Item>\n                        </Col>\n                       <Col span=\"8\">\n                            <Form.Item\n                                label=\"Banner Image For Mobile\"\n                                name=\"m_banner_img\"\n                                rules={[{ required: true, message: 'Required' }]}\n                                extra={<span>JPEG, JPG, PNG, WEBP | 3:2 Ratio  </span>}\n                            >\n                                <Input type=\"file\" name=\"m_banner_img\"\n                                    onChange={e => set_m_banner_img(e.target.files[0])}\n                                />\n                            </Form.Item>\n                        </Col>*/}\n\n                        <Col span=\"8\">\n                            <div class=\"banner-image-container\">\n                            <Form.Item label=\"Sequence\" name=\"sequence\"rules={[{ required: true, message: 'Required' }]}>\n                                <InputNumber name=\"sequence\" placeholder=\"Enter Sequence\"\n                                    style={{ width: \"100%\",borderRadius:'8px' }}\n                                    onChange={value => setFormData({ ...formData, [\"sequence\"]: value })}\n                                />\n                            </Form.Item>\n                            </div>\n                        </Col>  \n                    </Row>\n                    <Button type=\"primary\" style={{ marginTop:'10px' }} htmlType=\"submit\" loading={submitLoading} >SUBMIT</Button>\n                </Form>\n\n                <Modal visible={previewVisible} title={previewTitle} footer={null} onCancel={handleCancel}>\n                    <img alt=\"example\" style={{ width: '100%',}} src={previewImage} />\n                </Modal><Divider />\n                \n                <Table dataSource={tableData} columns={columns} size=\"small\" pagination={false} />\n            </PageContainer>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    saveSliderImagesState: state.saveSliderImages,\n    getSliderListState: state.getSliderList,\n    delSliderState: state.delSlider,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    saveSliderImages: (params) => dispatch(saveSliderImages(params)),\n    saveSliderImagesReset: () => dispatch(saveSliderImagesReset()),\n    getSliderList: (params) => dispatch(getSliderList(params)),\n    getSliderListReset: () => dispatch(getSliderListReset()),\n    delSlider: (params) => dispatch(delSlider(params)),\n    delSliderReset: () => dispatch(delSliderReset()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeSlider)"],"mappings":"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"},"metadata":{},"sourceType":"module"}
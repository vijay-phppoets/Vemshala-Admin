{"ast":null,"code":"import { call, put, takeLatest } from 'redux-saga/effects';\nimport { SAVE_ATTRIBUTE_FOR_VARIANTS, saveAttributeForVariantsSuccess, saveAttributeForVariantsFail } from '../action/saveAttributeForVariantsAction';\nimport saveAttributeForVariantsApi from '../api/saveAttributeForVariantsApi';\nexport function* saveAttributeForVariantsSaga(action) {\n  try {\n    const response = yield call(() => saveAttributeForVariantsApi(action.params));\n    yield put(saveAttributeForVariantsSuccess(response, action));\n  } catch (e) {\n    yield put(saveAttributeForVariantsFail(e.response, action));\n  }\n}\nexport default function* MySaga() {\n  yield takeLatest(SAVE_ATTRIBUTE_FOR_VARIANTS, saveAttributeForVariantsSaga);\n}","map":{"version":3,"sources":["/home/kuldeep/Git Hub/Vemshala-Admin/src/saga/saveAttributeForVariantsSaga.js"],"names":["call","put","takeLatest","SAVE_ATTRIBUTE_FOR_VARIANTS","saveAttributeForVariantsSuccess","saveAttributeForVariantsFail","saveAttributeForVariantsApi","saveAttributeForVariantsSaga","action","response","params","e","MySaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AAEA,SACIC,2BADJ,EAEIC,+BAFJ,EAGIC,4BAHJ,QAIO,0CAJP;AAMA,OAAOC,2BAAP,MAAwC,oCAAxC;AAEA,OAAO,UAAUC,4BAAV,CAAuCC,MAAvC,EAA+C;AAClD,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMT,IAAI,CAAC,MAAMM,2BAA2B,CAACE,MAAM,CAACE,MAAR,CAAlC,CAA3B;AACA,UAAMT,GAAG,CAACG,+BAA+B,CAACK,QAAD,EAAWD,MAAX,CAAhC,CAAT;AACH,GAHD,CAGE,OAAOG,CAAP,EAAU;AACR,UAAMV,GAAG,CAACI,4BAA4B,CAACM,CAAC,CAACF,QAAH,EAAaD,MAAb,CAA7B,CAAT;AACH;AACJ;AAED,eAAe,UAAUI,MAAV,GAAmB;AAC9B,QAAMV,UAAU,CAACC,2BAAD,EAA8BI,4BAA9B,CAAhB;AACH","sourcesContent":["import { call, put, takeLatest } from 'redux-saga/effects'\n\nimport {\n    SAVE_ATTRIBUTE_FOR_VARIANTS,\n    saveAttributeForVariantsSuccess,\n    saveAttributeForVariantsFail\n} from '../action/saveAttributeForVariantsAction'\n\nimport saveAttributeForVariantsApi from '../api/saveAttributeForVariantsApi'\n\nexport function* saveAttributeForVariantsSaga(action) {\n    try {\n        const response = yield call(() => saveAttributeForVariantsApi(action.params))\n        yield put(saveAttributeForVariantsSuccess(response, action))\n    } catch (e) {\n        yield put(saveAttributeForVariantsFail(e.response, action))\n    }\n}\n\nexport default function* MySaga() {\n    yield takeLatest(SAVE_ATTRIBUTE_FOR_VARIANTS, saveAttributeForVariantsSaga);\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/kuldeep/Git Hub/Vemshala-Admin/src/page/CustomerList/CustomerList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Table } from \"antd\";\nimport { connect } from \"react-redux\"; // @custom-component-imports ------------------------------------------------------------------------ \n\nimport DataTable from 'react-data-table-component';\nimport DataTableExtensions from 'react-data-table-component-extensions';\nimport 'react-data-table-component-extensions/dist/index.css';\nimport Header from \"../../component/Header/Header\";\nimport { PageContainer } from \"../../component/Xcomponent\"; // @actions-imports ----------------------------------------------------------------------------------\n\nimport { getOrderList, getOrderListReset } from \"../../action/getOrderListAction\";\nimport { getCustomerList, getCustomerListReset } from \"../../action/getCustomerListAction\"; //-----------------------------------------------------------------------------------------------------\n\nconst CustomerList = props => {\n  const {\n    getCustomerList,\n    getCustomerListState\n  } = props;\n  const [tableData, setTableData] = useState([]);\n  const newtableData = {\n    columns: [{\n      name: 'Customer Name',\n      selector: 'title',\n      sortable: true\n    }, {\n      name: 'Customer Email',\n      selector: 'director',\n      sortable: true\n    }, {\n      name: 'Register Date',\n      selector: 'genres',\n      sortable: true,\n      cell: d => /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 32\n        }\n      }, d.genres.join(', '))\n    }, {\n      name: 'Customer Contact No.',\n      selector: 'year',\n      sortable: true\n    }],\n    data: [{\n      title: 'Beetle Juice',\n      year: '1988',\n      genres: ['Comedy', 'Fantasy'],\n      director: 'Tim Burton'\n    }, {\n      id: 2,\n      title: 'The Cotton Club',\n      year: '1984',\n      runtime: '127',\n      genres: ['Crime', 'Drama', 'Music'],\n      director: 'Francis Ford Coppola'\n    }]\n  };\n  const columns = [{\n    title: 'Customer Name',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: 'Email',\n    dataIndex: 'email',\n    key: 'email',\n    render: email => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 30\n      }\n    }, email)\n  }, {\n    title: 'Register Date',\n    dataIndex: 'created_at',\n    key: 'created_at',\n    render: created_at => {\n      var date = new Date(created_at);\n      var month = date.getMonth() + 1; //months (0-11)\n\n      var day = date.getDate(); //day (1-31)\n\n      var year = date.getFullYear();\n      var formattedDate = month + \"/\" + day + \"/\" + year;\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, formattedDate);\n    }\n  }];\n  /* callbacks -------------------------------------------------------------------------------------------------*/\n\n  useEffect(() => {\n    getCustomerList();\n  }, []);\n  useEffect(() => {\n    if (getCustomerListState.apiState === \"success\") {\n      console.clear();\n      console.log(getCustomerListState); // let tableData = []\n      // getCustomerListState.list.map(row => {\n      //     tableData.push({\n      //         key: row.id,\n      //         name: row.name,\n      //         email: row.email,\n      //         created_at: row.created_at,\n      //         id: row.id,\n      //     })\n      // })\n      // setTableData(tableData)\n    }\n  }, [getCustomerListState]);\n  /* ----------------------------------------------------------------------------------------------------------*/\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    title: \"Customer List\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DataTableExtensions, Object.assign({}, newtableData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(DataTable, {\n    noHeader: true,\n    defaultSortField: \"id\",\n    defaultSortAsc: false,\n    pagination: true,\n    highlightOnHover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  getOrderListState: state.getOrderList,\n  getCustomerListState: state.getCustomerList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getOrderList: params => dispatch(getOrderList(params)),\n  getOrderListReset: () => dispatch(getOrderListReset()),\n  getCustomerList: params => dispatch(getCustomerList(params)),\n  getCustomerListReset: () => dispatch(getCustomerListReset())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerList);","map":{"version":3,"sources":["/home/kuldeep/Git Hub/Vemshala-Admin/src/page/CustomerList/CustomerList.js"],"names":["React","useEffect","useState","Table","connect","DataTable","DataTableExtensions","Header","PageContainer","getOrderList","getOrderListReset","getCustomerList","getCustomerListReset","CustomerList","props","getCustomerListState","tableData","setTableData","newtableData","columns","name","selector","sortable","cell","d","genres","join","data","title","year","director","id","runtime","dataIndex","key","render","email","created_at","date","Date","month","getMonth","day","getDate","getFullYear","formattedDate","apiState","console","clear","log","mapStateToProps","state","getOrderListState","mapDispatchToProps","dispatch","params"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Table } from \"antd\"\nimport { connect } from \"react-redux\"\n\n// @custom-component-imports ------------------------------------------------------------------------ \n\n    import DataTable from 'react-data-table-component';\n    import DataTableExtensions from 'react-data-table-component-extensions';\n    import 'react-data-table-component-extensions/dist/index.css';\n\n    import Header from \"../../component/Header/Header\"\n    import { PageContainer } from \"../../component/Xcomponent\"\n\n// @actions-imports ----------------------------------------------------------------------------------\n\n    import { getOrderList, getOrderListReset } from \"../../action/getOrderListAction\"\n    import { getCustomerList, getCustomerListReset } from \"../../action/getCustomerListAction\"\n \n//-----------------------------------------------------------------------------------------------------\n\nconst CustomerList = props => {\n   \n    const { getCustomerList, getCustomerListState } = props\n    const [tableData, setTableData] = useState([])\n\n    const newtableData = {\n        columns : [{\n                    name: 'Customer Name',\n                    selector: 'title',\n                    sortable: true,\n                    },{\n                    name: 'Customer Email',\n                    selector: 'director',\n                    sortable: true,\n                    },{\n                    name: 'Register Date',\n                    selector: 'genres',\n                    sortable: true,\n                    cell: d => <span>{d.genres.join(', ')}</span>,\n                    },{\n                    name: 'Customer Contact No.',\n                    selector: 'year',\n                    sortable: true,\n                    },],\n        data    : [{\n                    title : 'Beetle Juice',\n                    year  : '1988',\n                    genres: ['Comedy','Fantasy',],\n                    director: 'Tim Burton',\n                    },{\n                    id: 2,\n                    title: 'The Cotton Club',\n                    year: '1984',\n                    runtime: '127',\n                    genres: ['Crime','Drama','Music',],\n                    director: 'Francis Ford Coppola',\n                }],\n      }\n    \n    const columns = [\n        {\n            title: 'Customer Name',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: 'Email',\n            dataIndex: 'email',\n            key: 'email',\n            render: email => <span>{email}</span>\n        },\n        {\n            title: 'Register Date',\n            dataIndex: 'created_at',\n            key: 'created_at',\n            render: (created_at) => {\n                var date = new Date(created_at);\n                var month = date.getMonth() + 1;//months (0-11)\n                var day = date.getDate();//day (1-31)\n                var year = date.getFullYear();\n\n                var formattedDate = month + \"/\" + day + \"/\" + year;\n                return (\n                    <span>{formattedDate}</span>\n                )\n            }\n        },\n    ];\n\n/* callbacks -------------------------------------------------------------------------------------------------*/\n\n    useEffect(() => { getCustomerList()}, [])\n    useEffect(() => {\n        \n        if (getCustomerListState.apiState === \"success\") {\n\n        console.clear(); console.log(getCustomerListState);\n\n\n            // let tableData = []\n\n            // getCustomerListState.list.map(row => {\n            //     tableData.push({\n            //         key: row.id,\n            //         name: row.name,\n            //         email: row.email,\n            //         created_at: row.created_at,\n            //         id: row.id,\n            //     })\n            // })\n            // setTableData(tableData)\n        }\n    }, [getCustomerListState])\n\n/* ----------------------------------------------------------------------------------------------------------*/\n\n    return (\n        <React.Fragment>\n            <Header title=\"Customer List\"/>\n            <PageContainer>\n                {/* <Table dataSource={tableData} columns={columns} size=\"small\" pagination={false} /> */}\n\n                <DataTableExtensions {...newtableData} >\n                    <DataTable\n                        noHeader\n                        defaultSortField=\"id\"\n                        defaultSortAsc={false}\n                        pagination\n                        highlightOnHover\n                    />\n                </DataTableExtensions>\n            </PageContainer>\n        </React.Fragment>\n    )\n}\nconst mapStateToProps = (state) => ({\n    getOrderListState    : state.getOrderList,\n    getCustomerListState : state.getCustomerList,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getOrderList:         (params) => dispatch(getOrderList(params)),\n    getOrderListReset:    ()       => dispatch(getOrderListReset()),\n    getCustomerList:      (params) => dispatch(getCustomerList(params)),\n    getCustomerListReset: ()       => dispatch(getCustomerListReset()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerList)"]},"metadata":{},"sourceType":"module"}
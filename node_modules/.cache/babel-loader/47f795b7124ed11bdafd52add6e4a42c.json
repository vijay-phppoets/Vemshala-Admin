{"ast":null,"code":"import _regeneratorRuntime from\"/home/kuldeep/Git Hub/Vemshala-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(saveSpImgDataSaga),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(MySaga);import{call,put,takeLatest}from'redux-saga/effects';import{SAVE_SP_IMG_DATA,saveSpImgDataSuccess,saveSpImgDataFail}from'../action/saveSpImgDataAction';import saveSpImgDataApi from'../api/saveSpImgDataApi';export function saveSpImgDataSaga(action){var response;return _regeneratorRuntime.wrap(function saveSpImgDataSaga$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return call(function(){return saveSpImgDataApi(action.params);});case 3:response=_context.sent;_context.next=6;return put(saveSpImgDataSuccess(response,action));case 6:_context.next=12;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);_context.next=12;return put(saveSpImgDataFail(_context.t0.response,action));case 12:case\"end\":return _context.stop();}}},_marked,null,[[0,8]]);}export default function MySaga(){return _regeneratorRuntime.wrap(function MySaga$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(SAVE_SP_IMG_DATA,saveSpImgDataSaga);case 2:case\"end\":return _context2.stop();}}},_marked2);}","map":{"version":3,"sources":["/home/kuldeep/Git Hub/Vemshala-Admin/src/saga/saveSpImgDataSaga.js"],"names":["saveSpImgDataSaga","MySaga","call","put","takeLatest","SAVE_SP_IMG_DATA","saveSpImgDataSuccess","saveSpImgDataFail","saveSpImgDataApi","action","params","response"],"mappings":"oMAUiBA,iB,iDASQC,M,EAnBzB,OAASC,IAAT,CAAeC,GAAf,CAAoBC,UAApB,KAAsC,oBAAtC,CAEA,OACIC,gBADJ,CAEIC,oBAFJ,CAGIC,iBAHJ,KAIO,+BAJP,CAMA,MAAOC,CAAAA,gBAAP,KAA6B,yBAA7B,CAEA,MAAO,SAAUR,CAAAA,iBAAV,CAA4BS,MAA5B,yKAEkB,MAAMP,CAAAA,IAAI,CAAC,iBAAMM,CAAAA,gBAAgB,CAACC,MAAM,CAACC,MAAR,CAAtB,EAAD,CAAV,CAFlB,OAEOC,QAFP,+BAGC,MAAMR,CAAAA,GAAG,CAACG,oBAAoB,CAACK,QAAD,CAAWF,MAAX,CAArB,CAAT,CAHD,uGAKC,MAAMN,CAAAA,GAAG,CAACI,iBAAiB,CAAC,YAAEI,QAAH,CAAaF,MAAb,CAAlB,CAAT,CALD,oEASP,cAAe,SAAUR,CAAAA,MAAV,sIACX,MAAMG,CAAAA,UAAU,CAACC,gBAAD,CAAmBL,iBAAnB,CAAhB,CADW","sourcesContent":["import { call, put, takeLatest } from 'redux-saga/effects'\n\nimport {\n    SAVE_SP_IMG_DATA,\n    saveSpImgDataSuccess,\n    saveSpImgDataFail\n} from '../action/saveSpImgDataAction'\n\nimport saveSpImgDataApi from '../api/saveSpImgDataApi'\n\nexport function* saveSpImgDataSaga(action) {\n    try {\n        const response = yield call(() => saveSpImgDataApi(action.params))\n        yield put(saveSpImgDataSuccess(response, action))\n    } catch (e) {\n        yield put(saveSpImgDataFail(e.response, action))\n    }\n}\n\nexport default function* MySaga() {\n    yield takeLatest(SAVE_SP_IMG_DATA, saveSpImgDataSaga);\n}"]},"metadata":{},"sourceType":"module"}
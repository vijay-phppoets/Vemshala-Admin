{"ast":null,"code":"import { call, put, takeLatest } from 'redux-saga/effects';\nimport { DEL_REL_PROD, delRelProdSuccess, delRelProdFail } from '../action/delRelProdAction';\nimport delRelProdApi from '../api/delRelProdApi';\nexport function* delRelProdSaga(action) {\n  try {\n    const response = yield call(() => delRelProdApi(action.params));\n    yield put(delRelProdSuccess(response, action));\n  } catch (e) {\n    yield put(delRelProdFail(e.response, action));\n  }\n}\nexport default function* MySaga() {\n  yield takeLatest(DEL_REL_PROD, delRelProdSaga);\n}","map":{"version":3,"names":["call","put","takeLatest","DEL_REL_PROD","delRelProdSuccess","delRelProdFail","delRelProdApi","delRelProdSaga","action","response","params","e","MySaga"],"sources":["/home/kuldeep/Git Hub/Vemshala-Admin/src/saga/delRelProdSaga.js"],"sourcesContent":["import { call, put, takeLatest } from 'redux-saga/effects'\n\nimport {\n    DEL_REL_PROD,\n    delRelProdSuccess,\n    delRelProdFail\n} from '../action/delRelProdAction'\n\nimport delRelProdApi from '../api/delRelProdApi'\n\nexport function* delRelProdSaga(action) {\n    try {\n        const response = yield call(() => delRelProdApi(action.params))\n        yield put(delRelProdSuccess(response, action))\n    } catch (e) {\n        yield put(delRelProdFail(e.response, action))\n    }\n}\n\nexport default function* MySaga() {\n    yield takeLatest(DEL_REL_PROD, delRelProdSaga);\n}"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AAEA,SACIC,YADJ,EAEIC,iBAFJ,EAGIC,cAHJ,QAIO,4BAJP;AAMA,OAAOC,aAAP,MAA0B,sBAA1B;AAEA,OAAO,UAAUC,cAAV,CAAyBC,MAAzB,EAAiC;EACpC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMT,IAAI,CAAC,MAAMM,aAAa,CAACE,MAAM,CAACE,MAAR,CAApB,CAA3B;IACA,MAAMT,GAAG,CAACG,iBAAiB,CAACK,QAAD,EAAWD,MAAX,CAAlB,CAAT;EACH,CAHD,CAGE,OAAOG,CAAP,EAAU;IACR,MAAMV,GAAG,CAACI,cAAc,CAACM,CAAC,CAACF,QAAH,EAAaD,MAAb,CAAf,CAAT;EACH;AACJ;AAED,eAAe,UAAUI,MAAV,GAAmB;EAC9B,MAAMV,UAAU,CAACC,YAAD,EAAeI,cAAf,CAAhB;AACH"},"metadata":{},"sourceType":"module"}
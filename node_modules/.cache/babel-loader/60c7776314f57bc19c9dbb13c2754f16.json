{"ast":null,"code":"import _defineProperty from\"/home/kuldeep/Git Hub/Vemshala-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/kuldeep/Git Hub/Vemshala-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/home/kuldeep/Git Hub/Vemshala-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/kuldeep/Git Hub/Vemshala-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/kuldeep/Git Hub/Vemshala-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Form,Input,Row,Col,TreeSelect,Button,message}from\"antd\";import{connect}from\"react-redux\";import{v4 as uuidv4}from'uuid';import axios from'axios';import{Redirect}from\"react-router-dom\";/* custom component */import Header from\"../../component/Header/Header\";import{PageContainer}from\"../../component/Xcomponent\";/* action */import{getCategoryTree as _getCategoryTree,getCategoryTreeReset as _getCategoryTreeReset}from\"../../action/getCategoryTreeAction\";import{createCategory as _createCategory,createCategoryReset as _createCategoryReset}from\"../../action/createCategoryAction\";/* others */import{validateImageFile,getS3SingedUrl}from\"../../utils\";import cnf from\"../../config\";var TreeNode=TreeSelect.TreeNode;var CategoryAdd=function CategoryAdd(props){/* variables */var getCategoryTree=props.getCategoryTree,getCategoryTreeReset=props.getCategoryTreeReset,getCategoryTreeState=props.getCategoryTreeState,createCategory=props.createCategory,createCategoryReset=props.createCategoryReset,createCategoryState=props.createCategoryState;var _useState=useState({parent_category_id:null,name:\"\",url_key:\"\",image:\"\",banner_img:\"\",m_banner_img:\"\"}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),image=_useState4[0],set_image=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),banner_img=_useState6[0],set_banner_img=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),m_banner_img=_useState8[0],set_m_banner_img=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),submitLoading=_useState10[0],setSubmitLoading=_useState10[1];var _useState11=useState([false,'']),_useState12=_slicedToArray(_useState11,2),redirect=_useState12[0],setRedirect=_useState12[1];/* callbacks */useEffect(function(){return function(){getCategoryTreeReset();createCategoryReset();};},[]);useEffect(function(){getCategoryTree();},[]);useEffect(function(){if(createCategoryState.apiState===\"success\"){setRedirect([true,'/category/list']);message.success(createCategoryState.message);}if(createCategoryState.apiState===\"error\"){createCategoryReset();message.error(createCategoryState.message);}},[createCategoryState]);/* function */var categoryOptions=function categoryOptions(tree){var finalJsx=[];tree.map(function(node){if(node.children.length>0){finalJsx.push(/*#__PURE__*/React.createElement(TreeNode,{value:node.id,title:node.name},categoryOptions(node.children)));}else{finalJsx.push(/*#__PURE__*/React.createElement(TreeNode,{value:node.id,title:node.name}));}});return finalJsx;};var handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var image_filename,banner_img_filename,m_banner_img_filename,imageValRes,bannerImageValRes,mBannerImageValRes,s3UrlRes1,s3UrlRes2,s3UrlRes3;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:image_filename=uuidv4();banner_img_filename=uuidv4();m_banner_img_filename=uuidv4();imageValRes=validateImageFile(image);bannerImageValRes=validateImageFile(banner_img);mBannerImageValRes=validateImageFile(m_banner_img);if(imageValRes.status){_context.next=9;break;}alert(\"Image's extension is not allowed.\");return _context.abrupt(\"return\");case 9:if(bannerImageValRes.status){_context.next=12;break;}alert(\"Banner Image's extension is not allowed.\");return _context.abrupt(\"return\");case 12:if(mBannerImageValRes.status){_context.next=15;break;}alert(\"Mobile Banner Image's extension is not allowed.\");return _context.abrupt(\"return\");case 15:setSubmitLoading(true);_context.next=18;return getS3SingedUrl(image_filename,imageValRes.ext,image);case 18:s3UrlRes1=_context.sent;_context.next=21;return axios.put(s3UrlRes1.url,image);case 21:_context.next=23;return getS3SingedUrl(banner_img_filename,bannerImageValRes.ext,banner_img);case 23:s3UrlRes2=_context.sent;_context.next=26;return axios.put(s3UrlRes2.url,banner_img);case 26:_context.next=28;return getS3SingedUrl(m_banner_img_filename,mBannerImageValRes.ext,m_banner_img);case 28:s3UrlRes3=_context.sent;_context.next=31;return axios.put(s3UrlRes3.url,m_banner_img);case 31:formData.image=\"\".concat(image_filename,\".\").concat(imageValRes.ext);formData.banner_img=\"\".concat(banner_img_filename,\".\").concat(bannerImageValRes.ext);formData.m_banner_img=\"\".concat(m_banner_img_filename,\".\").concat(mBannerImageValRes.ext);createCategory(formData);case 35:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(React.Fragment,null,redirect[0]&&/*#__PURE__*/React.createElement(Redirect,{to:redirect[1]}),/*#__PURE__*/React.createElement(Header,{title:\"Category Add\"}),/*#__PURE__*/React.createElement(PageContainer,null,/*#__PURE__*/React.createElement(Form,{layout:\"vertical\",onFinish:handleSubmit},/*#__PURE__*/React.createElement(Row,{gutter:\"24\"},/*#__PURE__*/React.createElement(Col,{span:\"12\"},/*#__PURE__*/React.createElement(Form.Item,{label:\"Parent Category (Empty for Root level category)\",name:\"parent_category_id\"},/*#__PURE__*/React.createElement(TreeSelect,{showSearch:true,filterTreeNode:function filterTreeNode(input,treeNode){return treeNode.title.toLowerCase().indexOf(input.toLowerCase())>=0;},style:{width:'100%'},dropdownStyle:{maxHeight:400,overflow:'auto'},placeholder:\"Blank for root category\",allowClear:true,treeDefaultExpandAll:true,onChange:function onChange(value,node){return setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},'parent_category_id',value)));}},categoryOptions(getCategoryTreeState.tree)))),/*#__PURE__*/React.createElement(Col,{span:\"12\"},/*#__PURE__*/React.createElement(Form.Item,{label:\"Name\",name:\"name\",rules:[{required:true,message:'Required'}]},/*#__PURE__*/React.createElement(Input,{name:\"name\",placeholder:\"Enter Category Name\",onChange:function onChange(e){return setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},'name',e.target.value)));}})))),/*#__PURE__*/React.createElement(Row,{gutter:\"24\"},/*#__PURE__*/React.createElement(Col,{span:\"12\"},/*#__PURE__*/React.createElement(Form.Item,{label:\"URL Key\",name:\"url_key\",rules:[{required:true,message:'Required'},{pattern:new RegExp('^[a-zA-Z0-9-.]+$'),message:\"This field must be a valid url. It should only contain alphanumeric character, dash(-) and dot(.)\"}]},/*#__PURE__*/React.createElement(Input,{name:\"url_key\",placeholder:\"Enter Category URL Key\",onChange:function onChange(e){return setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},'url_key',e.target.value)));},addonBefore:cnf.domain}))),/*#__PURE__*/React.createElement(Col,{span:\"12\"},/*#__PURE__*/React.createElement(Form.Item,{label:\"Image\",name:\"image\",rules:[{required:true,message:'Required'}],extra:/*#__PURE__*/React.createElement(\"span\",null,\"JPEG, JPG, PNG, WEBP | 1:1 Ratio  \")},/*#__PURE__*/React.createElement(Input,{type:\"file\",name:\"image\",onChange:function onChange(e){return set_image(e.target.files[0]);}})))),/*#__PURE__*/React.createElement(Row,{gutter:\"24\"},/*#__PURE__*/React.createElement(Col,{span:\"12\"},/*#__PURE__*/React.createElement(Form.Item,{label:\"Banner Image\",name:\"banner_img\",rules:[{required:true,message:'Required'}],extra:/*#__PURE__*/React.createElement(\"span\",null,\"JPEG, JPG, PNG, WEBP | 4:1 Ratio  \")},/*#__PURE__*/React.createElement(Input,{type:\"file\",name:\"banner_img\",onChange:function onChange(e){return set_banner_img(e.target.files[0]);}}))),/*#__PURE__*/React.createElement(Col,{span:\"12\"},/*#__PURE__*/React.createElement(Form.Item,{label:\"Banner Image For Mobile\",name:\"m_banner_img\",rules:[{required:true,message:'Required'}],extra:/*#__PURE__*/React.createElement(\"span\",null,\"JPEG, JPG, PNG, WEBP | 3:2 Ratio  \")},/*#__PURE__*/React.createElement(Input,{type:\"file\",name:\"m_banner_img\",onChange:function onChange(e){return set_m_banner_img(e.target.files[0]);}})))),/*#__PURE__*/React.createElement(Button,{type:\"primary\",htmlType:\"submit\",loading:submitLoading},\"SUBMIT\"))));};var mapStateToProps=function mapStateToProps(state){return{getCategoryTreeState:state.getCategoryTree,createCategoryState:state.createCategory};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{getCategoryTree:function getCategoryTree(params){return dispatch(_getCategoryTree(params));},getCategoryTreeReset:function getCategoryTreeReset(){return dispatch(_getCategoryTreeReset());},createCategory:function createCategory(params){return dispatch(_createCategory(params));},createCategoryReset:function createCategoryReset(){return dispatch(_createCategoryReset());}};};export default connect(mapStateToProps,mapDispatchToProps)(CategoryAdd);","map":{"version":3,"sources":["/home/kuldeep/Git Hub/Vemshala-Admin/src/page/CategoryAdd/CategoryAdd.js"],"names":["React","useState","useEffect","Form","Input","Row","Col","TreeSelect","Button","message","connect","v4","uuidv4","axios","Redirect","Header","PageContainer","getCategoryTree","getCategoryTreeReset","createCategory","createCategoryReset","validateImageFile","getS3SingedUrl","cnf","TreeNode","CategoryAdd","props","getCategoryTreeState","createCategoryState","parent_category_id","name","url_key","image","banner_img","m_banner_img","formData","setFormData","set_image","set_banner_img","set_m_banner_img","submitLoading","setSubmitLoading","redirect","setRedirect","apiState","success","error","categoryOptions","tree","finalJsx","map","node","children","length","push","id","handleSubmit","image_filename","banner_img_filename","m_banner_img_filename","imageValRes","bannerImageValRes","mBannerImageValRes","status","alert","ext","s3UrlRes1","put","url","s3UrlRes2","s3UrlRes3","input","treeNode","title","toLowerCase","indexOf","width","maxHeight","overflow","value","required","e","target","pattern","RegExp","domain","files","mapStateToProps","state","mapDispatchToProps","dispatch","params"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Form, Input, Row, Col, TreeSelect, Button, message } from \"antd\"\nimport { connect } from \"react-redux\"\nimport { v4 as uuidv4 } from 'uuid'\nimport axios from 'axios'\nimport { Redirect } from \"react-router-dom\"\n\n/* custom component */\nimport Header from \"../../component/Header/Header\"\nimport { PageContainer } from \"../../component/Xcomponent\"\n\n/* action */\nimport { getCategoryTree, getCategoryTreeReset } from \"../../action/getCategoryTreeAction\"\nimport { createCategory, createCategoryReset } from \"../../action/createCategoryAction\"\n\n/* others */\nimport { validateImageFile, getS3SingedUrl } from \"../../utils\"\nimport cnf from \"../../config\"\n\nconst { TreeNode } = TreeSelect\n\nconst CategoryAdd = props => {\n    /* variables */\n    const {\n        getCategoryTree, getCategoryTreeReset, getCategoryTreeState,\n        createCategory, createCategoryReset, createCategoryState\n    } = props\n    const [formData, setFormData] = useState({\n        parent_category_id: null,\n        name: \"\",\n        url_key: \"\",\n        image: \"\",\n        banner_img: \"\",\n        m_banner_img: \"\"\n    })\n    const [image, set_image] = useState(null)\n    const [banner_img, set_banner_img] = useState(null)\n    const [m_banner_img, set_m_banner_img] = useState(null)\n    const [submitLoading, setSubmitLoading] = useState(false)\n    const [redirect, setRedirect] = useState([false, ''])\n\n    /* callbacks */\n    useEffect(() => {\n        return (() => {\n            getCategoryTreeReset()\n            createCategoryReset()\n        })\n    }, [])\n\n    useEffect(() => {\n        getCategoryTree()\n    }, [])\n\n    useEffect(() => {\n        if (createCategoryState.apiState === \"success\") {\n            setRedirect([true, '/category/list'])\n            message.success(createCategoryState.message);\n        }\n\n        if (createCategoryState.apiState === \"error\") {\n            createCategoryReset()\n            message.error(createCategoryState.message);\n        }\n    }, [createCategoryState])\n\n    /* function */\n    const categoryOptions = (tree) => {\n        let finalJsx = []\n        tree.map(node => {\n            if (node.children.length > 0) {\n                finalJsx.push(\n                    <TreeNode value={node.id} title={node.name}>{categoryOptions(node.children)}</TreeNode>\n                )\n            } else {\n                finalJsx.push(\n                    <TreeNode value={node.id} title={node.name} />\n                )\n            }\n        })\n        return finalJsx\n    }\n\n    const handleSubmit = async () => {\n        let image_filename = uuidv4()\n        let banner_img_filename = uuidv4()\n        let m_banner_img_filename = uuidv4()\n\n        let imageValRes = validateImageFile(image)\n        let bannerImageValRes = validateImageFile(banner_img)\n        let mBannerImageValRes = validateImageFile(m_banner_img)\n\n        if (!imageValRes.status) {\n            alert(\"Image's extension is not allowed.\")\n            return\n        }\n        if (!bannerImageValRes.status) {\n            alert(\"Banner Image's extension is not allowed.\")\n            return\n        }\n        if (!mBannerImageValRes.status) {\n            alert(\"Mobile Banner Image's extension is not allowed.\")\n            return\n        }\n\n        setSubmitLoading(true)\n\n        let s3UrlRes1 = await getS3SingedUrl(image_filename, imageValRes.ext, image)\n        await axios.put(s3UrlRes1.url, image)\n\n        let s3UrlRes2 = await getS3SingedUrl(banner_img_filename, bannerImageValRes.ext, banner_img)\n        await axios.put(s3UrlRes2.url, banner_img)\n\n        let s3UrlRes3 = await getS3SingedUrl(m_banner_img_filename, mBannerImageValRes.ext, m_banner_img)\n        await axios.put(s3UrlRes3.url, m_banner_img)\n\n        formData.image = `${image_filename}.${imageValRes.ext}`\n        formData.banner_img = `${banner_img_filename}.${bannerImageValRes.ext}`\n        formData.m_banner_img = `${m_banner_img_filename}.${mBannerImageValRes.ext}`\n\n        createCategory(formData)\n    }\n\n    return (\n        <>\n            {redirect[0] &&\n                <Redirect to={redirect[1]} />}\n\n            <Header\n                title=\"Category Add\"\n            />\n            <PageContainer>\n\n                <Form layout=\"vertical\" onFinish={handleSubmit}>\n                    <Row gutter=\"24\" >\n                        <Col span=\"12\">\n                            <Form.Item\n                                label=\"Parent Category (Empty for Root level category)\"\n                                name=\"parent_category_id\"\n                            >\n                                <TreeSelect\n                                    showSearch\n                                    filterTreeNode={(input, treeNode) =>\n                                        treeNode.title.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                    }\n                                    style={{ width: '100%' }}\n                                    dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\n                                    placeholder=\"Blank for root category\"\n                                    allowClear\n                                    treeDefaultExpandAll\n                                    onChange={(value, node) => setFormData({ ...formData, ['parent_category_id']: value })}\n                                >\n                                    {categoryOptions(getCategoryTreeState.tree)}\n                                </TreeSelect>\n                            </Form.Item>\n                        </Col>\n\n                        <Col span=\"12\" >\n                            <Form.Item\n                                label=\"Name\"\n                                name=\"name\"\n                                rules={[{ required: true, message: 'Required' }]}\n                            >\n                                <Input name=\"name\" placeholder=\"Enter Category Name\"\n                                    onChange={(e) => setFormData({ ...formData, ['name']: e.target.value })}\n                                />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <Row gutter=\"24\" >\n                        <Col span=\"12\" >\n                            <Form.Item\n                                label=\"URL Key\"\n                                name=\"url_key\"\n                                rules={[\n                                    { required: true, message: 'Required' },\n                                    {\n                                        pattern: new RegExp('^[a-zA-Z0-9-.]+$'),\n                                        message: \"This field must be a valid url. It should only contain alphanumeric character, dash(-) and dot(.)\"\n                                    }\n                                ]}\n                            >\n                                <Input name=\"url_key\" placeholder=\"Enter Category URL Key\"\n                                    onChange={(e) => setFormData({ ...formData, ['url_key']: e.target.value })}\n                                    addonBefore={cnf.domain}\n                                />\n                            </Form.Item>\n                        </Col>\n\n                        <Col span=\"12\" >\n                            <Form.Item\n                                label=\"Image\"\n                                name=\"image\"\n                                rules={[{ required: true, message: 'Required' }]}\n                                extra={<span>JPEG, JPG, PNG, WEBP | 1:1 Ratio  </span>}\n                            >\n                                <Input type=\"file\" name=\"image\"\n                                    onChange={e => set_image(e.target.files[0])}\n                                />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <Row gutter=\"24\" >\n                        <Col span=\"12\" >\n                            <Form.Item\n                                label=\"Banner Image\"\n                                name=\"banner_img\"\n                                rules={[{ required: true, message: 'Required' }]}\n                                extra={<span>JPEG, JPG, PNG, WEBP | 4:1 Ratio  </span>}\n                            >\n                                <Input type=\"file\" name=\"banner_img\"\n                                    onChange={e => set_banner_img(e.target.files[0])}\n                                />\n                            </Form.Item>\n                        </Col>\n\n                        <Col span=\"12\" >\n                            <Form.Item\n                                label=\"Banner Image For Mobile\"\n                                name=\"m_banner_img\"\n                                rules={[{ required: true, message: 'Required' }]}\n                                extra={<span>JPEG, JPG, PNG, WEBP | 3:2 Ratio  </span>}\n                            >\n                                <Input type=\"file\" name=\"m_banner_img\"\n                                    onChange={e => set_m_banner_img(e.target.files[0])}\n                                />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <Button type=\"primary\" htmlType=\"submit\" loading={submitLoading} >SUBMIT</Button>\n\n                </Form>\n            </PageContainer>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    getCategoryTreeState: state.getCategoryTree,\n    createCategoryState: state.createCategory,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getCategoryTree: (params) => dispatch(getCategoryTree(params)),\n    getCategoryTreeReset: () => dispatch(getCategoryTreeReset()),\n    createCategory: (params) => dispatch(createCategory(params)),\n    createCategoryReset: () => dispatch(createCategoryReset()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryAdd)"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from\"/home/kuldeep/Git Hub/Vemshala-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _defineProperty from\"/home/kuldeep/Git Hub/Vemshala-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _asyncToGenerator from\"/home/kuldeep/Git Hub/Vemshala-Admin/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import cnf from'../src/config';export var isLogin=function isLogin(){var PikyUserToken=localStorage.getItem('PikyUserToken');if(PikyUserToken)return true;else return false;};export var validateImageFile=function validateImageFile(file){var ext;if(file.type==\"image/jpeg\")ext=\"jpeg\";if(file.type==\"image/png\")ext=\"png\";if(file.type==\"image/jpg\")ext=\"jpg\";if(file.type==\"image/webp\")ext=\"webp\";if(ext){return{status:true,ext:ext};}else{return{status:false};}};export var getUserToken=function getUserToken(){return localStorage.getItem('PikyUserToken')||null;};export var getS3SingedUrl=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(filename,ext,file){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",new Promise(function(resolve,reject){fetch(\"\".concat(cnf.api.base_url,\"get-singed-url-for-put?filename=\").concat(filename,\"&ext=\").concat(ext),{method:'get',headers:{\"Content-type\":\"application/json; charset=UTF-8\",\"authorization\":\"Bearer \".concat(getUserToken())}}).then(function(res){var result=res.json();return Promise.all([result]);}).then(function(result){var _resolve;resolve((_resolve={},_defineProperty(_resolve,'url',result[0].url),_defineProperty(_resolve,'filename',\"\".concat(filename,\".\").concat(ext)),_resolve));}).catch(console.log);}));case 1:case\"end\":return _context.stop();}}},_callee);}));return function getS3SingedUrl(_x,_x2,_x3){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["/home/kuldeep/Git Hub/Vemshala-Admin/src/utils.js"],"names":["cnf","isLogin","PikyUserToken","localStorage","getItem","validateImageFile","file","ext","type","status","getUserToken","getS3SingedUrl","filename","Promise","resolve","reject","fetch","api","base_url","method","headers","then","res","result","json","all","url","catch","console","log"],"mappings":"gdAAA,MAAOA,CAAAA,GAAP,KAAgB,eAAhB,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACzB,GAAMC,CAAAA,aAAa,CAAGC,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAtB,CAEA,GAAIF,aAAJ,CAAmB,MAAO,KAAP,CAAnB,IACK,OAAO,MAAP,CACR,CALM,CAOP,MAAO,IAAMG,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,IAAD,CAAU,CACvC,GAAIC,CAAAA,GAAJ,CACA,GAAID,IAAI,CAACE,IAAL,EAAa,YAAjB,CAA+BD,GAAG,CAAG,MAAN,CAC/B,GAAID,IAAI,CAACE,IAAL,EAAa,WAAjB,CAA8BD,GAAG,CAAG,KAAN,CAC9B,GAAID,IAAI,CAACE,IAAL,EAAa,WAAjB,CAA8BD,GAAG,CAAG,KAAN,CAC9B,GAAID,IAAI,CAACE,IAAL,EAAa,YAAjB,CAA+BD,GAAG,CAAG,MAAN,CAE/B,GAAIA,GAAJ,CAAS,CACL,MAAO,CAAEE,MAAM,CAAE,IAAV,CAAgBF,GAAG,CAAEA,GAArB,CAAP,CACH,CAFD,IAEO,CACH,MAAO,CAAEE,MAAM,CAAE,KAAV,CAAP,CACH,CACJ,CAZM,CAcP,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CAC9B,MAAOP,CAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,GAAyC,IAAhD,CACH,CAFM,CAIP,MAAO,IAAMO,CAAAA,cAAc,0FAAG,iBAAOC,QAAP,CAAiBL,GAAjB,CAAsBD,IAAtB,kJACnB,GAAIO,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpCC,KAAK,WAAIhB,GAAG,CAACiB,GAAJ,CAAQC,QAAZ,4CAAuDN,QAAvD,iBAAuEL,GAAvE,EAA8E,CAC/EY,MAAM,CAAE,KADuE,CAE/EC,OAAO,CAAE,CACL,eAAgB,iCADX,CAEL,iCAA2BV,YAAY,EAAvC,CAFK,CAFsE,CAA9E,CAAL,CAMGW,IANH,CAMQ,SAAAC,GAAG,CAAI,CACX,GAAMC,CAAAA,MAAM,CAAGD,GAAG,CAACE,IAAJ,EAAf,CACA,MAAOX,CAAAA,OAAO,CAACY,GAAR,CAAY,CAACF,MAAD,CAAZ,CAAP,CACH,CATD,EASGF,IATH,CASQ,SAACE,MAAD,CAAY,cAChBT,OAAO,uCAAI,KAAJ,CAAYS,MAAM,CAAC,CAAD,CAAN,CAAUG,GAAtB,2BAA4B,UAA5B,WAA4Cd,QAA5C,aAAwDL,GAAxD,aAAP,CACH,CAXD,EAWGoB,KAXH,CAWSC,OAAO,CAACC,GAXjB,EAYH,CAbM,CADmB,wDAAH,kBAAdlB,CAAAA,cAAc,oDAApB","sourcesContent":["import cnf from '../src/config'\n\nexport const isLogin = () => {\n    const PikyUserToken = localStorage.getItem('PikyUserToken')\n\n    if (PikyUserToken) return true\n    else return false\n}\n\nexport const validateImageFile = (file) => {\n    let ext\n    if (file.type == \"image/jpeg\") ext = \"jpeg\"\n    if (file.type == \"image/png\") ext = \"png\"\n    if (file.type == \"image/jpg\") ext = \"jpg\"\n    if (file.type == \"image/webp\") ext = \"webp\"\n\n    if (ext) {\n        return { status: true, ext: ext }\n    } else {\n        return { status: false }\n    }\n}\n\nexport const getUserToken = () => {\n    return localStorage.getItem('PikyUserToken') || null\n}\n\nexport const getS3SingedUrl = async (filename, ext, file) => {\n    return new Promise((resolve, reject) => {\n        fetch(`${cnf.api.base_url}get-singed-url-for-put?filename=${filename}&ext=${ext}`, {\n            method: 'get',\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\",\n                \"authorization\": `Bearer ${getUserToken()}`\n            }\n        }).then(res => {\n            const result = res.json();\n            return Promise.all([result]);\n        }).then((result) => {\n            resolve({ ['url']: result[0].url, ['filename']: `${filename}.${ext}` })\n        }).catch(console.log)\n    })\n}"]},"metadata":{},"sourceType":"module"}
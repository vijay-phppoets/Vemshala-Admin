{"ast":null,"code":"var _jsxFileName = \"/home/kuldeep/Git Hub/Vemshala-Admin/src/page/ProductList/ProductList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Table, Space, Badge } from \"antd\";\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { EditOutlined } from \"@ant-design/icons\";\n/* custom component */\n\nimport Header from \"../../component/Header/Header\";\nimport { PageContainer } from \"../../component/Xcomponent\";\nimport { Indicator } from \"./ProductListStyle\";\n/* actions */\n\nimport { getProductList, getProductListReset } from \"../../action/getProductListAction\";\n\nconst ProductList = props => {\n  /* variables */\n  const {\n    getProductList,\n    getProductListReset,\n    getProductListState\n  } = props;\n  const [tableData, setTableData] = useState([]);\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name'\n  }, {\n    title: 'Type',\n    dataIndex: 'type',\n    key: 'type',\n    render: type => /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textTransform: \"capitalize\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }\n    }, type)\n  }, {\n    title: 'Price',\n    dataIndex: 'price',\n    key: 'price',\n    render: obj => /*#__PURE__*/React.createElement(Space, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, obj.is_sale_price === \"yes\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textDecoration: \"line-through\",\n        color: \"#00000099\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }, \"\\u20B9\", obj.price), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }, \"\\u20B9\", obj.sale_price)) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 27\n      }\n    }, \"\\u20B9\", obj.price))\n  }, {\n    title: 'Status',\n    dataIndex: 'status',\n    key: 'status',\n    render: status => status === \"enabled\" ? /*#__PURE__*/React.createElement(Indicator, {\n      green: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 56\n      }\n    }) : /*#__PURE__*/React.createElement(Indicator, {\n      red: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 78\n      }\n    })\n  }, {\n    title: 'Action',\n    dataIndex: 'id',\n    key: 'action',\n    render: id => /*#__PURE__*/React.createElement(Link, {\n      to: `/product/${id}/edit`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      icon: /*#__PURE__*/React.createElement(EditOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 77\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 50\n      }\n    }))\n  }];\n  /* callbacks */\n\n  useEffect(() => {\n    getProductList();\n  }, []);\n  useEffect(() => {\n    if (getProductListState.apiState === \"success\") {\n      let tableData = [];\n      getProductListState.list.map(row => {\n        tableData.push({\n          key: row.id,\n          name: row.name,\n          type: row.type,\n          price: {\n            price: row.price,\n            is_sale_price: row.is_sale_price,\n            sale_price: row.sale_price\n          },\n          status: row.status,\n          id: row.id\n        });\n      });\n      setTableData(tableData);\n    }\n  }, [getProductListState]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    title: \"Product List\",\n    actionBtn: /*#__PURE__*/React.createElement(Link, {\n      to: \"/product/add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 52\n      }\n    }, \"New\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PageContainer, {\n    list: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    dataSource: tableData,\n    columns: columns,\n    size: \"small\",\n    pagination: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  getProductListState: state.getProductList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getProductList: params => dispatch(getProductList(params)),\n  getProductListReset: () => dispatch(getProductListReset())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList);","map":{"version":3,"sources":["/home/kuldeep/Git Hub/Vemshala-Admin/src/page/ProductList/ProductList.js"],"names":["React","useEffect","useState","Button","Table","Space","Badge","Link","connect","EditOutlined","Header","PageContainer","Indicator","getProductList","getProductListReset","ProductList","props","getProductListState","tableData","setTableData","columns","title","dataIndex","key","render","type","textTransform","obj","is_sale_price","textDecoration","color","price","sale_price","status","id","apiState","list","map","row","push","name","mapStateToProps","state","mapDispatchToProps","dispatch","params"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Button, Table, Space, Badge } from \"antd\"\nimport { Link } from 'react-router-dom'\nimport { connect } from \"react-redux\"\nimport { EditOutlined } from \"@ant-design/icons\"\n\n/* custom component */\nimport Header from \"../../component/Header/Header\"\nimport { PageContainer } from \"../../component/Xcomponent\"\nimport { Indicator } from \"./ProductListStyle\"\n\n/* actions */\nimport { getProductList, getProductListReset } from \"../../action/getProductListAction\"\n\n\nconst ProductList = props => {\n    /* variables */\n    const { getProductList, getProductListReset, getProductListState } = props\n    const [tableData, setTableData] = useState([])\n    const columns = [\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: 'Type',\n            dataIndex: 'type',\n            key: 'type',\n            render: type => <span style={{ textTransform: \"capitalize\" }} >{type}</span>\n        },\n        {\n            title: 'Price',\n            dataIndex: 'price',\n            key: 'price',\n            render: (obj) => (\n                <Space>\n                    {obj.is_sale_price === \"yes\" ?\n                        <>\n                            <span style={{ textDecoration: \"line-through\", color: \"#00000099\" }} >₹{obj.price}</span>\n                            <span>₹{obj.sale_price}</span>\n                        </>\n                        : <span>₹{obj.price}</span>\n                    }\n\n                </Space>\n            )\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: (status) => status === \"enabled\" ? <Indicator green /> : <Indicator red />\n        },\n        {\n            title: 'Action',\n            dataIndex: 'id',\n            key: 'action',\n            render: (id) => (\n                <Link to={`/product/${id}/edit`}><Button size=\"small\" icon={<EditOutlined />} /></Link>\n            )\n        },\n    ];\n\n    /* callbacks */\n    useEffect(() => {\n        getProductList()\n    }, [])\n\n    useEffect(() => {\n        if (getProductListState.apiState === \"success\") {\n            let tableData = []\n            getProductListState.list.map(row => {\n                tableData.push({\n                    key: row.id,\n                    name: row.name,\n                    type: row.type,\n                    price: { price: row.price, is_sale_price: row.is_sale_price, sale_price: row.sale_price },\n                    status: row.status,\n                    id: row.id,\n                })\n            })\n            setTableData(tableData)\n        }\n    }, [getProductListState])\n\n\n    return (\n        <>\n            <Header\n                title=\"Product List\"\n                actionBtn={<Link to='/product/add'><Button >New</Button></Link>}\n            />\n            <PageContainer list >\n                <Table dataSource={tableData} columns={columns} size=\"small\" pagination={false} />\n            </PageContainer>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    getProductListState: state.getProductList,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getProductList: (params) => dispatch(getProductList(params)),\n    getProductListReset: () => dispatch(getProductListReset()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductList)"]},"metadata":{},"sourceType":"module"}
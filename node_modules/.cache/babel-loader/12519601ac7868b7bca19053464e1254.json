{"ast":null,"code":"var _jsxFileName = \"/home/kuldeep/Git Hub/Vemshala-Admin/src/page/ProductImages/ProductImages.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Row, Col, Select, Button, Input, InputNumber, message, Space, Tooltip, Popconfirm, Tag, Divider } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\nimport { DeleteOutlined, StarOutlined } from \"@ant-design/icons\";\n/* actions */\n\nimport { getProductView, getProductViewReset } from \"../../action/getProductViewAction\";\nimport { saveProdImg, saveProdImgReset } from \"../../action/saveProdImgAction\";\nimport { delProdImg, delProdImgReset } from \"../../action/delProdImgAction\";\nimport { markImgThumb, markImgThumbReset } from \"../../action/markImgThumbAction\";\n/* custom component */\n\nimport Header from \"../../component/Header/Header\";\nimport { PageContainer } from \"../../component/Xcomponent\";\nimport ProductTabs from \"../../component/ProductTabs/ProductTabs\";\n/* others */\n\nimport { validateImageFile, getS3SingedUrl } from \"../../utils\";\nimport cnf from \"../../config\";\n\nconst ProductImages = props => {\n  /* variables */\n  const product_id = props.match.params.product_id;\n  const {\n    getProductView,\n    getProductViewReset,\n    getProductViewState,\n    saveProdImg,\n    saveProdImgReset,\n    saveProdImgState,\n    delProdImg,\n    delProdImgReset,\n    delProdImgState,\n    markImgThumb,\n    markImgThumbReset,\n    markImgThumbState\n  } = props;\n  const [redirect, setRedirect] = useState([false, '']);\n  const [image, set_image] = useState(null);\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const [refresh, setRefresh] = useState(0);\n  const [imgAttr, setImgAttr] = useState({\n    attribute_id: null,\n    attribute_option_id: null\n  });\n  /* callbacks */\n\n  useEffect(() => {\n    return () => {\n      getProductViewReset();\n      saveProdImgReset();\n      delProdImgReset();\n      markImgThumbReset();\n    };\n  }, []);\n  useEffect(() => {\n    getProductView({\n      product_id: product_id\n    });\n  }, [refresh]);\n  useEffect(() => {\n    if (saveProdImgState.apiState === \"success\") {\n      saveProdImgReset();\n      setRefresh(refresh + 1);\n      message.success(saveProdImgState.message);\n      setSubmitLoading(false);\n    }\n\n    if (saveProdImgState.apiState === \"error\") {\n      saveProdImgReset();\n      message.error(saveProdImgState.message);\n      setSubmitLoading(false);\n    }\n  }, [saveProdImgState]);\n  useEffect(() => {\n    if (delProdImgState.apiState === \"success\") {\n      delProdImgReset();\n      setRefresh(refresh + 1);\n      message.success(delProdImgState.message);\n    }\n\n    if (delProdImgState.apiState === \"error\") {\n      delProdImgReset();\n      message.error(delProdImgState.message);\n    }\n  }, [delProdImgState]);\n  useEffect(() => {\n    if (markImgThumbState.apiState === \"success\") {\n      markImgThumbReset();\n      setRefresh(refresh + 1);\n      message.success(markImgThumbState.message);\n    }\n\n    if (markImgThumbState.apiState === \"error\") {\n      markImgThumbReset();\n      message.error(markImgThumbState.message);\n    }\n  }, [markImgThumbState]);\n  /* functions */\n\n  const handleImgSub = async () => {\n    let filename = uuidv4();\n    let imageValRes = validateImageFile(image);\n\n    if (!imageValRes.status) {\n      alert(\"Image's extension is not allowed.\");\n      return;\n    }\n\n    setSubmitLoading(true);\n    let s3UrlRes1 = await getS3SingedUrl(filename, imageValRes.ext, image);\n    await axios.put(s3UrlRes1.url, image);\n    saveProdImg({\n      product_id: product_id,\n      image: `${filename}.${imageValRes.ext}`,\n      attribute_id: imgAttr.attribute_id,\n      attribute_option_id: imgAttr.attribute_option_id\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, redirect[0] && /*#__PURE__*/React.createElement(Redirect, {\n    to: redirect[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    title: \"Product Images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, getProductViewState.apiState === \"success\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductTabs, {\n    id: getProductViewState.product.id,\n    active: \"images\",\n    type: getProductViewState.product.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onFinish: handleImgSub,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Image\",\n    name: \"image\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    extra: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 48\n      }\n    }, \"JPEG, JPG, PNG, WEBP | 1:1 Ratio  \"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"file\",\n    name: \"image\",\n    onChange: e => {\n      set_image(e.target.files[0]);\n      setImgAttr({\n        attribute_id: null,\n        attribute_option_id: null\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: submitLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 37\n    }\n  }, \"SAVE\")))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  }, getProductViewState.images.map(img => {\n    if (!img.attribute_option_id) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginRight: 4,\n          border: \"solid 1px #f5f5f5\",\n          padding: 4\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: `${cnf.s3_base_url}${img.image}`,\n        alt: \"\",\n        style: {\n          height: \"auto\",\n          width: 100\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginTop: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Space, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Popconfirm, {\n        title: \"Are you sure to delete this image?\",\n        onConfirm: () => delProdImg({\n          product_id: product_id,\n          img_id: img.id,\n          image: img.image,\n          attribute_id: null,\n          attribute_option_id: null\n        }),\n        okText: \"Delete\",\n        cancelText: \"Cancel\",\n        okType: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 84\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 57\n        }\n      })), !img.is_thumbnail ? /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Mark as Thumbnail\",\n        placement: \"bottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        icon: /*#__PURE__*/React.createElement(StarOutlined, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 88\n          }\n        }),\n        onClick: () => markImgThumb({\n          img_id: img.id,\n          product_id: product_id,\n          attribute_id: null,\n          attribute_option_id: null\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 61\n        }\n      })) : /*#__PURE__*/React.createElement(Tag, {\n        color: \"green\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 59\n        }\n      }, \"Thumbnail\"))));\n    }\n  })), getProductViewState.product.attribute_for_separate_images && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 33\n    }\n  }), getProductViewState.attr_data_for_sp_img.map(attr => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    onFinish: handleImgSub,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 45\n    }\n  }, \"Separate Images for \", attr.name, \": \", attr.option_value), /*#__PURE__*/React.createElement(Row, {\n    gutter: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Image\",\n    name: \"image\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    extra: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 64\n      }\n    }, \"JPEG, JPG, PNG, WEBP | 1:1 Ratio  \"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 53\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"file\",\n    name: \"image\",\n    onChange: e => {\n      set_image(e.target.files[0]);\n      setImgAttr({\n        attribute_id: attr.attribute_id,\n        attribute_option_id: attr.attribute_option_id\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 57\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: submitLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 53\n    }\n  }, \"SAVE\")))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 41\n    }\n  }, getProductViewState.images.map(img => {\n    if (img.attribute_option_id === attr.attribute_option_id) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginRight: 4,\n          border: \"solid 1px #f5f5f5\",\n          padding: 4\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: `${cnf.s3_base_url}${img.image}`,\n        alt: \"\",\n        style: {\n          height: \"auto\",\n          width: 100\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 61\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginTop: 8\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(Space, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Popconfirm, {\n        title: \"Are you sure to delete this image?\",\n        onConfirm: () => delProdImg({\n          product_id: product_id,\n          img_id: img.id,\n          image: img.image,\n          attribute_id: img.attribute_id,\n          attribute_option_id: img.attribute_option_id\n        }),\n        okText: \"Delete\",\n        cancelText: \"Cancel\",\n        okType: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 100\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 73\n        }\n      })), !img.is_thumbnail ? /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Mark as Thumbnail\",\n        placement: \"bottom\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        icon: /*#__PURE__*/React.createElement(StarOutlined, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 104\n          }\n        }),\n        onClick: () => markImgThumb({\n          img_id: img.id,\n          product_id: product_id,\n          attribute_id: img.attribute_id,\n          attribute_option_id: img.attribute_option_id\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 77\n        }\n      })) : /*#__PURE__*/React.createElement(Tag, {\n        color: \"green\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 75\n        }\n      }, \"Thumbnail\"))));\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 41\n    }\n  })))))));\n};\n\nconst mapStateToProps = state => ({\n  getProductViewState: state.getProductView,\n  saveProdImgState: state.saveProdImg,\n  delProdImgState: state.delProdImg,\n  markImgThumbState: state.markImgThumb\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getProductView: params => dispatch(getProductView(params)),\n  getProductViewReset: () => dispatch(getProductViewReset()),\n  saveProdImg: params => dispatch(saveProdImg(params)),\n  saveProdImgReset: () => dispatch(saveProdImgReset()),\n  delProdImg: params => dispatch(delProdImg(params)),\n  delProdImgReset: () => dispatch(delProdImgReset()),\n  markImgThumb: params => dispatch(markImgThumb(params)),\n  markImgThumbReset: () => dispatch(markImgThumbReset())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductImages);","map":{"version":3,"sources":["/home/kuldeep/Git Hub/Vemshala-Admin/src/page/ProductImages/ProductImages.js"],"names":["React","useState","useEffect","Form","Row","Col","Select","Button","Input","InputNumber","message","Space","Tooltip","Popconfirm","Tag","Divider","connect","Redirect","v4","uuidv4","axios","DeleteOutlined","StarOutlined","getProductView","getProductViewReset","saveProdImg","saveProdImgReset","delProdImg","delProdImgReset","markImgThumb","markImgThumbReset","Header","PageContainer","ProductTabs","validateImageFile","getS3SingedUrl","cnf","ProductImages","props","product_id","match","params","getProductViewState","saveProdImgState","delProdImgState","markImgThumbState","redirect","setRedirect","image","set_image","submitLoading","setSubmitLoading","refresh","setRefresh","imgAttr","setImgAttr","attribute_id","attribute_option_id","apiState","success","error","handleImgSub","filename","imageValRes","status","alert","s3UrlRes1","ext","put","url","product","id","type","required","e","target","files","display","images","map","img","marginRight","border","padding","s3_base_url","height","width","marginTop","img_id","is_thumbnail","attribute_for_separate_images","attr_data_for_sp_img","attr","name","option_value","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Form, Row, Col, Select, Button, Input, InputNumber, message, Space, Tooltip, Popconfirm, Tag, Divider } from \"antd\"\nimport { connect } from \"react-redux\"\nimport { Redirect } from \"react-router-dom\"\nimport { v4 as uuidv4 } from 'uuid'\nimport axios from 'axios'\nimport { DeleteOutlined, StarOutlined } from \"@ant-design/icons\"\n\n/* actions */\nimport { getProductView, getProductViewReset } from \"../../action/getProductViewAction\"\nimport { saveProdImg, saveProdImgReset } from \"../../action/saveProdImgAction\"\nimport { delProdImg, delProdImgReset } from \"../../action/delProdImgAction\"\nimport { markImgThumb, markImgThumbReset } from \"../../action/markImgThumbAction\"\n\n/* custom component */\nimport Header from \"../../component/Header/Header\"\nimport { PageContainer } from \"../../component/Xcomponent\"\nimport ProductTabs from \"../../component/ProductTabs/ProductTabs\"\n\n/* others */\nimport { validateImageFile, getS3SingedUrl } from \"../../utils\"\nimport cnf from \"../../config\"\n\nconst ProductImages = props => {\n    /* variables */\n    const product_id = props.match.params.product_id\n    const {\n        getProductView, getProductViewReset, getProductViewState,\n        saveProdImg, saveProdImgReset, saveProdImgState,\n        delProdImg, delProdImgReset, delProdImgState,\n        markImgThumb, markImgThumbReset, markImgThumbState,\n    } = props\n    const [redirect, setRedirect] = useState([false, ''])\n    const [image, set_image] = useState(null)\n    const [submitLoading, setSubmitLoading] = useState(false)\n    const [refresh, setRefresh] = useState(0)\n    const [imgAttr, setImgAttr] = useState({\n        attribute_id: null,\n        attribute_option_id: null\n    })\n\n    /* callbacks */\n    useEffect(() => {\n        return (() => {\n            getProductViewReset()\n            saveProdImgReset()\n            delProdImgReset()\n            markImgThumbReset()\n        })\n    }, [])\n\n\n    useEffect(() => {\n        getProductView({\n            product_id: product_id\n        })\n    }, [refresh])\n\n    useEffect(() => {\n        if (saveProdImgState.apiState === \"success\") {\n            saveProdImgReset()\n            setRefresh(refresh + 1)\n            message.success(saveProdImgState.message);\n            setSubmitLoading(false)\n        }\n\n        if (saveProdImgState.apiState === \"error\") {\n            saveProdImgReset()\n            message.error(saveProdImgState.message);\n            setSubmitLoading(false)\n        }\n    }, [saveProdImgState])\n\n    useEffect(() => {\n        if (delProdImgState.apiState === \"success\") {\n            delProdImgReset()\n            setRefresh(refresh + 1)\n            message.success(delProdImgState.message);\n        }\n\n        if (delProdImgState.apiState === \"error\") {\n            delProdImgReset()\n            message.error(delProdImgState.message);\n        }\n    }, [delProdImgState])\n\n    useEffect(() => {\n        if (markImgThumbState.apiState === \"success\") {\n            markImgThumbReset()\n            setRefresh(refresh + 1)\n            message.success(markImgThumbState.message);\n        }\n\n        if (markImgThumbState.apiState === \"error\") {\n            markImgThumbReset()\n            message.error(markImgThumbState.message);\n        }\n    }, [markImgThumbState])\n\n    /* functions */\n    const handleImgSub = async () => {\n        let filename = uuidv4()\n        let imageValRes = validateImageFile(image)\n\n        if (!imageValRes.status) {\n            alert(\"Image's extension is not allowed.\")\n            return\n        }\n\n        setSubmitLoading(true)\n\n        let s3UrlRes1 = await getS3SingedUrl(filename, imageValRes.ext, image)\n        await axios.put(s3UrlRes1.url, image)\n\n        saveProdImg({\n            product_id: product_id,\n            image: `${filename}.${imageValRes.ext}`,\n            attribute_id: imgAttr.attribute_id,\n            attribute_option_id: imgAttr.attribute_option_id,\n        })\n    }\n\n    return (\n        <>\n            {redirect[0] &&\n                <Redirect to={redirect[1]} />}\n\n            <Header\n                title=\"Product Images\"\n            />\n            <PageContainer>\n                {getProductViewState.apiState === \"success\" &&\n                    <>\n                        <ProductTabs id={getProductViewState.product.id} active=\"images\" type={getProductViewState.product.type} />\n                        <Form onFinish={handleImgSub}>\n                            <Row gutter=\"12\" >\n                                <Col span=\"12\">\n                                    <Form.Item\n                                        label=\"Image\"\n                                        name=\"image\"\n                                        rules={[{ required: true, message: 'Required' }]}\n                                        extra={<span>JPEG, JPG, PNG, WEBP | 1:1 Ratio  </span>}\n                                    >\n                                        <Input type=\"file\" name=\"image\"\n                                            onChange={e => {\n                                                set_image(e.target.files[0])\n                                                setImgAttr({\n                                                    attribute_id: null,\n                                                    attribute_option_id: null,\n                                                })\n                                            }}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col span=\"4\">\n                                    <Button type=\"primary\" htmlType=\"submit\" loading={submitLoading} >SAVE</Button>\n                                </Col>\n                            </Row>\n                        </Form>\n\n                        <div style={{ display: \"flex\" }} >\n                            {getProductViewState.images.map(img => {\n                                if (!img.attribute_option_id) {\n                                    return (\n                                        <div style={{ marginRight: 4, border: \"solid 1px #f5f5f5\", padding: 4 }} >\n                                            <img src={`${cnf.s3_base_url}${img.image}`} alt=\"\" style={{ height: \"auto\", width: 100 }} />\n                                            <div style={{ marginTop: 8 }} >\n                                                <Space>\n                                                    <Popconfirm\n                                                        title=\"Are you sure to delete this image?\"\n                                                        onConfirm={() => delProdImg({\n                                                            product_id: product_id,\n                                                            img_id: img.id,\n                                                            image: img.image,\n                                                            attribute_id: null,\n                                                            attribute_option_id: null,\n                                                        })}\n                                                        okText=\"Delete\"\n                                                        cancelText=\"Cancel\"\n                                                        okType=\"danger\"\n                                                    >\n                                                        <Button size=\"small\" icon={<DeleteOutlined />} />\n                                                    </Popconfirm>\n                                                    {!img.is_thumbnail ?\n                                                        <Tooltip title=\"Mark as Thumbnail\" placement=\"bottom\" >\n                                                            <Button size=\"small\" icon={<StarOutlined />} onClick={() => markImgThumb({\n                                                                img_id: img.id,\n                                                                product_id: product_id,\n                                                                attribute_id: null,\n                                                                attribute_option_id: null,\n                                                            })} />\n                                                        </Tooltip>\n                                                        : <Tag color=\"green\">Thumbnail</Tag>\n                                                    }\n                                                </Space>\n                                            </div>\n                                        </div>\n                                    )\n                                }\n                            })}\n                        </div>\n\n                        {getProductViewState.product.attribute_for_separate_images &&\n                            <>\n                                <Divider />\n                                {getProductViewState.attr_data_for_sp_img.map(attr => (\n                                    <>\n                                        <Form onFinish={handleImgSub} >\n                                            <h3>Separate Images for {attr.name}: {attr.option_value}</h3>\n                                            <Row gutter=\"12\" >\n                                                <Col span=\"12\">\n                                                    <Form.Item\n                                                        label=\"Image\"\n                                                        name=\"image\"\n                                                        rules={[{ required: true, message: 'Required' }]}\n                                                        extra={<span>JPEG, JPG, PNG, WEBP | 1:1 Ratio  </span>}\n                                                    >\n                                                        <Input type=\"file\" name=\"image\"\n                                                            onChange={e => {\n                                                                set_image(e.target.files[0])\n                                                                setImgAttr({\n                                                                    attribute_id: attr.attribute_id,\n                                                                    attribute_option_id: attr.attribute_option_id,\n                                                                })\n                                                            }}\n                                                        />\n                                                    </Form.Item>\n                                                </Col>\n                                                <Col span=\"4\">\n                                                    <Button type=\"primary\" htmlType=\"submit\" loading={submitLoading} >SAVE</Button>\n                                                </Col>\n                                            </Row>\n                                        </Form>\n                                        <div style={{ display: \"flex\" }} >\n                                            {getProductViewState.images.map(img => {\n                                                if (img.attribute_option_id === attr.attribute_option_id) {\n                                                    return (\n                                                        <div style={{ marginRight: 4, border: \"solid 1px #f5f5f5\", padding: 4 }} >\n                                                            <img src={`${cnf.s3_base_url}${img.image}`} alt=\"\" style={{ height: \"auto\", width: 100 }} />\n                                                            <div style={{ marginTop: 8 }} >\n                                                                <Space>\n                                                                    <Popconfirm\n                                                                        title=\"Are you sure to delete this image?\"\n                                                                        onConfirm={() => delProdImg({\n                                                                            product_id: product_id,\n                                                                            img_id: img.id,\n                                                                            image: img.image,\n                                                                            attribute_id: img.attribute_id,\n                                                                            attribute_option_id: img.attribute_option_id,\n                                                                        })}\n                                                                        okText=\"Delete\"\n                                                                        cancelText=\"Cancel\"\n                                                                        okType=\"danger\"\n                                                                    >\n                                                                        <Button size=\"small\" icon={<DeleteOutlined />} />\n                                                                    </Popconfirm>\n                                                                    {!img.is_thumbnail ?\n                                                                        <Tooltip title=\"Mark as Thumbnail\" placement=\"bottom\" >\n                                                                            <Button size=\"small\" icon={<StarOutlined />} onClick={() => markImgThumb({\n                                                                                img_id: img.id,\n                                                                                product_id: product_id,\n                                                                                attribute_id: img.attribute_id,\n                                                                                attribute_option_id: img.attribute_option_id,\n                                                                            })} />\n                                                                        </Tooltip>\n                                                                        : <Tag color=\"green\">Thumbnail</Tag>\n                                                                    }\n                                                                </Space>\n                                                            </div>\n                                                        </div>\n                                                    )\n                                                }\n                                            })}\n                                        </div>\n                                        <Divider />\n                                    </>\n                                ))}\n                            </>\n                        }\n                    </>\n                }\n            </PageContainer>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    getProductViewState: state.getProductView,\n    saveProdImgState: state.saveProdImg,\n    delProdImgState: state.delProdImg,\n    markImgThumbState: state.markImgThumb,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getProductView: (params) => dispatch(getProductView(params)),\n    getProductViewReset: () => dispatch(getProductViewReset()),\n    saveProdImg: (params) => dispatch(saveProdImg(params)),\n    saveProdImgReset: () => dispatch(saveProdImgReset()),\n    delProdImg: (params) => dispatch(delProdImg(params)),\n    delProdImgReset: () => dispatch(delProdImgReset()),\n    markImgThumb: (params) => dispatch(markImgThumb(params)),\n    markImgThumbReset: () => dispatch(markImgThumbReset()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductImages)"]},"metadata":{},"sourceType":"module"}
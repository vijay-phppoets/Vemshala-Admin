{"ast":null,"code":"var _jsxFileName = \"/home/kuldeep/Git Hub/Vemshala-Admin/src/page/CustomerList/CustomerList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\"; // @custom-component-imports ------------------------------------------------------------------------ \n\nimport DataTable from 'react-data-table-component';\nimport DataTableExtensions from 'react-data-table-component-extensions';\nimport 'react-data-table-component-extensions/dist/index.css';\nimport Header from \"../../component/Header/Header\";\nimport { PageContainer } from \"../../component/Xcomponent\"; // @actions-imports ----------------------------------------------------------------------------------\n\nimport { getOrderList, getOrderListReset } from \"../../action/getOrderListAction\";\nimport { getCustomerList, getCustomerListReset } from \"../../action/getCustomerListAction\"; //-----------------------------------------------------------------------------------------------------\n\nconst CustomerList = props => {\n  const {\n    getCustomerList,\n    getCustomerListState\n  } = props;\n  const [tableData, setTableData] = useState([{\n    title: 'Beetle Juice',\n    year: '1988',\n    genres: ['Comedy', 'Fantasy'],\n    director: 'Tim Burton'\n  }, {\n    id: 2,\n    title: 'The Cotton Club',\n    year: '1984',\n    runtime: '127',\n    genres: ['Crime', 'Drama', 'Music'],\n    director: 'Francis Ford Coppola'\n  }]);\n  const [columns, setColumns] = useState([{\n    name: 'Customer Name',\n    selector: 'title',\n    sortable: true\n  }, {\n    name: 'Customer Email',\n    selector: 'director',\n    sortable: true\n  }, {\n    name: 'Register Date',\n    selector: 'genres',\n    sortable: true,\n    cell: d => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 24\n      }\n    }, d.genres.join(', '))\n  }, {\n    name: 'Customer Contact No.',\n    selector: 'year',\n    sortable: true\n  }]);\n  /* callbacks -------------------------------------------------------------------------------------------------*/\n\n  useEffect(() => {\n    getCustomerList();\n  }, []);\n  useEffect(() => {\n    if (getCustomerListState.apiState === \"success\") {\n      console.clear();\n      console.log(getCustomerListState); // let tableData = []\n      // getCustomerListState.list.map(row => {\n      //     tableData.push({\n      //         key: row.id,\n      //         name: row.name,\n      //         email: row.email,\n      //         created_at: row.created_at,\n      //         id: row.id,\n      //     })\n      // })\n      // setTableData(tableData)\n    }\n  }, [getCustomerListState]);\n  /* ----------------------------------------------------------------------------------------------------------*/\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    title: \"Customer List\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DataTableExtensions, {\n    columns: columns,\n    data: tableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    columns: columns,\n    data: tableData,\n    noHeader: true,\n    defaultSortField: \"id\",\n    defaultSortAsc: false,\n    pagination: true,\n    highlightOnHover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  getOrderListState: state.getOrderList,\n  getCustomerListState: state.getCustomerList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getOrderList: params => dispatch(getOrderList(params)),\n  getOrderListReset: () => dispatch(getOrderListReset()),\n  getCustomerList: params => dispatch(getCustomerList(params)),\n  getCustomerListReset: () => dispatch(getCustomerListReset())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerList);","map":{"version":3,"sources":["/home/kuldeep/Git Hub/Vemshala-Admin/src/page/CustomerList/CustomerList.js"],"names":["React","useEffect","useState","connect","DataTable","DataTableExtensions","Header","PageContainer","getOrderList","getOrderListReset","getCustomerList","getCustomerListReset","CustomerList","props","getCustomerListState","tableData","setTableData","title","year","genres","director","id","runtime","columns","setColumns","name","selector","sortable","cell","d","join","apiState","console","clear","log","mapStateToProps","state","getOrderListState","mapDispatchToProps","dispatch","params"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\n\n// @custom-component-imports ------------------------------------------------------------------------ \n\n    import DataTable from 'react-data-table-component';\n    import DataTableExtensions from 'react-data-table-component-extensions';\n    import 'react-data-table-component-extensions/dist/index.css';\n\n    import Header from \"../../component/Header/Header\"\n    import { PageContainer } from \"../../component/Xcomponent\"\n\n// @actions-imports ----------------------------------------------------------------------------------\n\n    import { getOrderList, getOrderListReset } from \"../../action/getOrderListAction\"\n    import { getCustomerList, getCustomerListReset } from \"../../action/getCustomerListAction\"\n \n//-----------------------------------------------------------------------------------------------------\n\nconst CustomerList = props => {\n   \n    const { getCustomerList, getCustomerListState } = props\n\n    const [tableData, setTableData] = useState([{\n        title : 'Beetle Juice',\n        year  : '1988',\n        genres: ['Comedy','Fantasy',],\n        director: 'Tim Burton',\n        },{\n        id: 2,\n        title: 'The Cotton Club',\n        year: '1984',\n        runtime: '127',\n        genres: ['Crime','Drama','Music',],\n        director: 'Francis Ford Coppola',\n    }])\n\n    const [columns,setColumns] = useState([{\n            name: 'Customer Name',\n            selector: 'title',\n            sortable: true,\n        },{\n            name: 'Customer Email',\n            selector: 'director',\n            sortable: true,\n        },{\n            name: 'Register Date',\n            selector: 'genres',\n            sortable: true,\n            cell: d => <span>{d.genres.join(', ')}</span>,\n        },{\n            name: 'Customer Contact No.',\n            selector: 'year',\n            sortable: true,\n        }\n    ])\n\n/* callbacks -------------------------------------------------------------------------------------------------*/\n\n    useEffect(() => { getCustomerList()}, [])\n    useEffect(() => {\n        \n        if (getCustomerListState.apiState === \"success\") {\n\n        console.clear(); console.log(getCustomerListState);\n\n\n            // let tableData = []\n\n            // getCustomerListState.list.map(row => {\n            //     tableData.push({\n            //         key: row.id,\n            //         name: row.name,\n            //         email: row.email,\n            //         created_at: row.created_at,\n            //         id: row.id,\n            //     })\n            // })\n            // setTableData(tableData)\n        }\n    }, [getCustomerListState])\n\n/* ----------------------------------------------------------------------------------------------------------*/\n\n    return (\n        <React.Fragment>\n            <Header title=\"Customer List\"/>\n            <PageContainer>\n                <DataTableExtensions columns={columns} data={tableData} >\n                    <DataTable\n                        columns={columns}\n                        data={tableData}\n                        noHeader\n                        defaultSortField=\"id\"\n                        defaultSortAsc={false}\n                        pagination\n                        highlightOnHover\n                    />\n                </DataTableExtensions>\n            </PageContainer>\n        </React.Fragment>\n    )\n}\nconst mapStateToProps = (state) => ({\n    getOrderListState    : state.getOrderList,\n    getCustomerListState : state.getCustomerList,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getOrderList:         (params) => dispatch(getOrderList(params)),\n    getOrderListReset:    ()       => dispatch(getOrderListReset()),\n    getCustomerList:      (params) => dispatch(getCustomerList(params)),\n    getCustomerListReset: ()       => dispatch(getCustomerListReset()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerList)"]},"metadata":{},"sourceType":"module"}
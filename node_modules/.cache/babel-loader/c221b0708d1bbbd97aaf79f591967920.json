{"ast":null,"code":"var _jsxFileName = \"/home/kuldeep/Git Hub/Vemshala-Admin/src/page/CustomerList/CustomerList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\"; // @custom-component-imports ------------------------------------------------------------------------ \n\nimport DataTable from 'react-data-table-component';\nimport DataTableExtensions from 'react-data-table-component-extensions';\nimport 'react-data-table-component-extensions/dist/index.css';\nimport Header from \"../../component/Header/Header\";\nimport { PageContainer } from \"../../component/Xcomponent\"; // @actions-imports ----------------------------------------------------------------------------------\n\nimport { getOrderList, getOrderListReset } from \"../../action/getOrderListAction\";\nimport { getCustomerList, getCustomerListReset } from \"../../action/getCustomerListAction\"; //-----------------------------------------------------------------------------------------------------\n\nconst CustomerList = props => {\n  const {\n    getCustomerList,\n    getCustomerListState\n  } = props;\n  const [tableData, setTableData] = useState([]);\n  const [columns, setColumns] = useState([{\n    name: 'Customer Name',\n    selector: data => data.name,\n    sortable: true\n  }, {\n    name: 'Customer Email',\n    selector: data => data.email,\n    sortable: true\n  }, {\n    name: 'Register Date',\n    selector: data => data.date,\n    sortable: true\n  }, {\n    name: 'Customer Contact No.',\n    selector: data => data.director,\n    sortable: true\n  }]);\n  /* callbacks -------------------------------------------------------------------------------------------------*/\n\n  useEffect(() => {\n    getCustomerList();\n  }, []);\n  useEffect(() => {\n    if (getCustomerListState.apiState === \"success\") {\n      const customerList = getCustomerListState.list.map(data => {\n        const serverDate = new Date(data.created_at);\n\n        const formatYmd = date => date.toISOString().slice(0, 10);\n\n        data.created_at = formatYmd(new Date(data.created_at));\n        return {\n          name: data.name,\n          email: data.email,\n          date: data.created_at,\n          director: 'Tim Burton'\n        };\n      });\n      setTableData(customerList);\n    }\n  }, [getCustomerListState]);\n  /* ----------------------------------------------------------------------------------------------------------*/\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    title: \"Customer List\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DataTableExtensions, {\n    print: false,\n    columns: columns,\n    data: tableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    noHeader: true,\n    defaultSortField: \"id\",\n    defaultSortAsc: false,\n    pagination: true,\n    highlightOnHover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst mapStateToProps = state => ({\n  getOrderListState: state.getOrderList,\n  getCustomerListState: state.getCustomerList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getOrderList: params => dispatch(getOrderList(params)),\n  getOrderListReset: () => dispatch(getOrderListReset()),\n  getCustomerList: params => dispatch(getCustomerList(params)),\n  getCustomerListReset: () => dispatch(getCustomerListReset())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerList);","map":{"version":3,"sources":["/home/kuldeep/Git Hub/Vemshala-Admin/src/page/CustomerList/CustomerList.js"],"names":["React","useEffect","useState","connect","DataTable","DataTableExtensions","Header","PageContainer","getOrderList","getOrderListReset","getCustomerList","getCustomerListReset","CustomerList","props","getCustomerListState","tableData","setTableData","columns","setColumns","name","selector","data","sortable","email","date","director","apiState","customerList","list","map","serverDate","Date","created_at","formatYmd","toISOString","slice","mapStateToProps","state","getOrderListState","mapDispatchToProps","dispatch","params"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\n\n// @custom-component-imports ------------------------------------------------------------------------ \n\n    import DataTable from 'react-data-table-component';\n    import DataTableExtensions from 'react-data-table-component-extensions';\n    import 'react-data-table-component-extensions/dist/index.css';\n\n    import Header from \"../../component/Header/Header\"\n    import { PageContainer } from \"../../component/Xcomponent\"\n\n// @actions-imports ----------------------------------------------------------------------------------\n\n    import { getOrderList, getOrderListReset } from \"../../action/getOrderListAction\"\n    import { getCustomerList, getCustomerListReset } from \"../../action/getCustomerListAction\"\n \n//-----------------------------------------------------------------------------------------------------\n\nconst CustomerList = props => {\n   \n    const { getCustomerList, getCustomerListState } = props\n\n    const [tableData, setTableData] = useState([])\n\n    const [columns,setColumns] = useState([{\n            name: 'Customer Name',\n            selector: data => data.name,\n            sortable: true,\n        },{\n            name: 'Customer Email',\n            selector: data => data.email,\n            sortable: true,\n        },{\n            name: 'Register Date',\n            selector: data => data.date,\n            sortable: true,\n        },{\n            name: 'Customer Contact No.',\n            selector: data => data.director,\n            sortable: true,\n        }\n    ])\n\n/* callbacks -------------------------------------------------------------------------------------------------*/\n\n    useEffect(() => { getCustomerList()}, [])\n    useEffect(() => {\n        \n        if (getCustomerListState.apiState === \"success\") {\n\n            const customerList = getCustomerListState.list.map(data => {\n\n                const serverDate = new Date(data.created_at);\n\n                const formatYmd = date => date.toISOString().slice(0, 10);\n\n                data.created_at = formatYmd(new Date(data.created_at))\n       \n                return  {\n                    name  : data.name,\n                    email : data.email,\n                    date  : data.created_at,\n                    director: 'Tim Burton',\n                }\n            })\n\n            setTableData(customerList);\n        }\n    }, [getCustomerListState])\n\n/* ----------------------------------------------------------------------------------------------------------*/\n\n    return (\n        <React.Fragment>\n            <Header title=\"Customer List\"/>\n            <PageContainer>\n                <DataTableExtensions print={false} columns={columns} data={tableData} >\n                    <DataTable\n                        noHeader\n                        defaultSortField=\"id\"\n                        defaultSortAsc={false}\n                        pagination\n                        highlightOnHover\n                    />\n                </DataTableExtensions>\n            </PageContainer>\n        </React.Fragment>\n    )\n}\nconst mapStateToProps = (state) => ({\n    getOrderListState    : state.getOrderList,\n    getCustomerListState : state.getCustomerList,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getOrderList:         (params) => dispatch(getOrderList(params)),\n    getOrderListReset:    ()       => dispatch(getOrderListReset()),\n    getCustomerList:      (params) => dispatch(getCustomerList(params)),\n    getCustomerListReset: ()       => dispatch(getCustomerListReset()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomerList)"]},"metadata":{},"sourceType":"module"}
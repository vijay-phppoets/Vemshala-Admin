{"ast":null,"code":"var _jsxFileName = \"/home/kuldeep/Git Hub/Vemshala-Admin/src/page/HomeSlider/HomeSlider.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Input, Row, Col, TreeSelect, Button, message, InputNumber, Divider, Popconfirm, Table } from \"antd\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\nimport { DeleteOutlined } from \"@ant-design/icons\";\nimport 'antd/dist/antd.css';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Modal, Upload } from 'antd';\n/* custom component */\n\nimport Header from \"../../component/Header/Header\";\nimport { PageContainer } from \"../../component/Xcomponent\";\n/* action */\n\nimport { saveSliderImages, saveSliderImagesReset } from \"../../action/saveSliderImagesAction\";\nimport { getSliderList, getSliderListReset } from \"../../action/getSliderListAction\";\nimport { delSlider, delSliderReset } from \"../../action/delSliderAction\";\n/* others */\n\nimport { validateImageFile, getS3SingedUrl } from \"../../utils\";\nimport cnf from \"../../config\";\n\nconst getBase64 = file => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => resolve(reader.result);\n\n  reader.onerror = error => reject(error);\n});\n\nconst HomeSlider = props => {\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const [previewTitle, setPreviewTitle] = useState('');\n  const [fileList, setFileList] = useState([]);\n\n  const handleCancel = () => setPreviewVisible(false);\n\n  const handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    setPreviewImage(file.url || file.preview);\n    setPreviewVisible(true);\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\n  };\n\n  const handleChange = _ref => {\n    let {\n      fileList: newFileList\n    } = _ref;\n    setFileList(newFileList);\n  };\n\n  const uploadButton = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PlusOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Upload\"));\n  /* variables */\n\n  const {\n    saveSliderImages,\n    saveSliderImagesReset,\n    saveSliderImagesState,\n    getSliderList,\n    getSliderListReset,\n    getSliderListState,\n    delSlider,\n    delSliderReset,\n    delSliderState\n  } = props;\n  const initial_values = {\n    banner_img: \"\",\n    m_banner_img: \"\",\n    sequence: 0\n  };\n  const [formData, setFormData] = useState(initial_values);\n  const [redirect, setRedirect] = useState([false, '']);\n  const [banner_img, set_banner_img] = useState(null);\n  const [m_banner_img, set_m_banner_img] = useState(null);\n  const [submitLoading, setSubmitLoading] = useState(false);\n  const [refresh, setRefresh] = useState(0);\n  const columns = [{\n    title: 'Image',\n    dataIndex: 'image',\n    key: 'image',\n    render: image => /*#__PURE__*/React.createElement(\"img\", {\n      src: `${cnf.s3_base_url}${image}`,\n      alt: \"\",\n      style: {\n        width: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    })\n  }, {\n    title: 'Mobile Image',\n    dataIndex: 'mobile_image',\n    key: 'mobile_image',\n    render: mobile_image => /*#__PURE__*/React.createElement(\"img\", {\n      src: `${cnf.s3_base_url}${mobile_image}`,\n      alt: \"\",\n      style: {\n        width: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 40\n      }\n    })\n  }, {\n    title: 'Sequence',\n    dataIndex: 'sequence',\n    key: 'sequence'\n  }, {\n    title: 'Action',\n    dataIndex: 'id',\n    key: 'action',\n    render: id => /*#__PURE__*/React.createElement(Popconfirm, {\n      title: \"Are you sure to delete this slider?\",\n      onConfirm: () => delSlider({\n        id: id\n      }),\n      okText: \"Delete\",\n      cancelText: \"Cancel\",\n      okType: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      icon: /*#__PURE__*/React.createElement(DeleteOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 48\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }\n    }))\n  }];\n  const [tableData, setTableData] = useState([]);\n  const [form] = Form.useForm();\n  /* callbakcs */\n\n  useEffect(() => {\n    return () => {\n      saveSliderImagesReset();\n      getSliderListReset();\n      delSliderReset();\n    };\n  }, []);\n  useEffect(() => {\n    getSliderList();\n  }, [refresh]);\n  useEffect(() => {\n    if (saveSliderImagesState.apiState === \"success\") {\n      setRefresh(refresh + 1);\n      form.resetFields();\n      setFormData(initial_values);\n      setSubmitLoading(false);\n      message.success(saveSliderImagesState.message);\n    }\n\n    if (saveSliderImagesState.apiState === \"error\") {\n      saveSliderImagesReset();\n      setSubmitLoading(false);\n      message.error(saveSliderImagesState.message);\n    }\n  }, [saveSliderImagesState]);\n  useEffect(() => {\n    if (delSliderState.apiState === \"success\") {\n      setRefresh(refresh + 1);\n      message.success(delSliderState.message);\n    }\n\n    if (delSliderState.apiState === \"error\") {\n      delSliderReset();\n      message.error(delSliderState.message);\n    }\n  }, [delSliderState]);\n  useEffect(() => {\n    if (getSliderListState.apiState === \"success\") {\n      let ar = [];\n      getSliderListState.list.map(obj => {\n        ar.push({\n          key: obj.id,\n          image: obj.image,\n          mobile_image: obj.m_image,\n          sequence: obj.sequence,\n          id: obj.id\n        });\n      });\n      setTableData(ar);\n    }\n  }, [getSliderListState]);\n  /* functions */\n\n  const handleSubmit = async () => {\n    let banner_img_filename = uuidv4();\n    let m_banner_img_filename = uuidv4();\n    let bannerImageValRes = validateImageFile(banner_img);\n    let mBannerImageValRes = validateImageFile(m_banner_img);\n\n    if (!bannerImageValRes.status) {\n      alert(\"Banner Image's extension is not allowed.\");\n      return;\n    }\n\n    if (!mBannerImageValRes.status) {\n      alert(\"Mobile Banner Image's extension is not allowed.\");\n      return;\n    }\n\n    setSubmitLoading(true);\n    let s3UrlRes2 = await getS3SingedUrl(banner_img_filename, bannerImageValRes.ext, banner_img);\n    await axios.put(s3UrlRes2.url, banner_img);\n    let s3UrlRes3 = await getS3SingedUrl(m_banner_img_filename, mBannerImageValRes.ext, m_banner_img);\n    await axios.put(s3UrlRes3.url, m_banner_img);\n    formData.banner_img = `${banner_img_filename}.${bannerImageValRes.ext}`;\n    formData.m_banner_img = `${m_banner_img_filename}.${mBannerImageValRes.ext}`;\n    saveSliderImages(formData);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }, redirect[0] && /*#__PURE__*/React.createElement(Redirect, {\n    to: redirect[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 42\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    title: \"Home Page Sliders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    form: form,\n    layout: \"vertical\",\n    onFinish: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: \"24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"banner-image-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Upload, {\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n    listType: \"picture-card\",\n    fileList: fileList,\n    onPreview: handlePreview,\n    onChange: handleChange,\n    accept: \"jpeg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 33\n    }\n  }, fileList.length > 1 ? null : uploadButton), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 33\n    }\n  }, \"JPEG, JPG, PNG, WEBP | 3:2 Ratio  \")))), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: submitLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 21\n    }\n  }, \"SUBMIT\")), /*#__PURE__*/React.createElement(Modal, {\n    visible: previewVisible,\n    title: previewTitle,\n    footer: null,\n    onCancel: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"example\",\n    style: {\n      width: '100%'\n    },\n    src: previewImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    dataSource: tableData,\n    columns: columns,\n    size: \"small\",\n    pagination: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  saveSliderImagesState: state.saveSliderImages,\n  getSliderListState: state.getSliderList,\n  delSliderState: state.delSlider\n});\n\nconst mapDispatchToProps = dispatch => ({\n  saveSliderImages: params => dispatch(saveSliderImages(params)),\n  saveSliderImagesReset: () => dispatch(saveSliderImagesReset()),\n  getSliderList: params => dispatch(getSliderList(params)),\n  getSliderListReset: () => dispatch(getSliderListReset()),\n  delSlider: params => dispatch(delSlider(params)),\n  delSliderReset: () => dispatch(delSliderReset())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeSlider);","map":{"version":3,"names":["React","useState","useEffect","Form","Input","Row","Col","TreeSelect","Button","message","InputNumber","Divider","Popconfirm","Table","Redirect","connect","v4","uuidv4","axios","DeleteOutlined","PlusOutlined","Modal","Upload","Header","PageContainer","saveSliderImages","saveSliderImagesReset","getSliderList","getSliderListReset","delSlider","delSliderReset","validateImageFile","getS3SingedUrl","cnf","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","HomeSlider","props","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","fileList","setFileList","handleCancel","handlePreview","url","preview","originFileObj","name","substring","lastIndexOf","handleChange","newFileList","uploadButton","marginTop","saveSliderImagesState","getSliderListState","delSliderState","initial_values","banner_img","m_banner_img","sequence","formData","setFormData","redirect","setRedirect","set_banner_img","set_m_banner_img","submitLoading","setSubmitLoading","refresh","setRefresh","columns","title","dataIndex","key","render","image","s3_base_url","width","mobile_image","id","tableData","setTableData","form","useForm","apiState","resetFields","success","ar","list","map","obj","push","m_image","handleSubmit","banner_img_filename","m_banner_img_filename","bannerImageValRes","mBannerImageValRes","status","alert","s3UrlRes2","ext","put","s3UrlRes3","length","mapStateToProps","state","mapDispatchToProps","dispatch","params"],"sources":["/home/kuldeep/Git Hub/Vemshala-Admin/src/page/HomeSlider/HomeSlider.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Form, Input, Row, Col, TreeSelect, Button, message, InputNumber, Divider, Popconfirm, Table } from \"antd\"\nimport { Redirect } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { v4 as uuidv4 } from 'uuid'\nimport axios from 'axios'\nimport { DeleteOutlined } from \"@ant-design/icons\"\nimport 'antd/dist/antd.css';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Modal, Upload } from 'antd';\n\n/* custom component */\nimport Header from \"../../component/Header/Header\"\nimport { PageContainer } from \"../../component/Xcomponent\"\n\n\n/* action */\nimport { saveSliderImages, saveSliderImagesReset } from \"../../action/saveSliderImagesAction\"\nimport { getSliderList, getSliderListReset } from \"../../action/getSliderListAction\"\nimport { delSlider, delSliderReset } from \"../../action/delSliderAction\"\n\n\n/* others */\nimport { validateImageFile, getS3SingedUrl } from \"../../utils\"\nimport cnf from \"../../config\"\n\n\n\nconst getBase64 = (file) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = (error) => reject(error);\n  });\n\n\nconst HomeSlider = props => {\n\n    const [previewVisible, setPreviewVisible] = useState(false);\n    const [previewImage, setPreviewImage] = useState('');\n    const [previewTitle, setPreviewTitle] = useState('');\n    const [fileList, setFileList] = useState([]);\n\n  const handleCancel = () => setPreviewVisible(false);\n\n  const handlePreview = async (file) => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    setPreviewImage(file.url || file.preview);\n    setPreviewVisible(true);\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\n  };\n\n  const handleChange = ({ fileList: newFileList }) => { setFileList(newFileList); }\n\n  const uploadButton = (\n    <div>\n      <PlusOutlined />\n      <div\n        style={{\n          marginTop: 8,\n        }}\n      >\n        Upload\n      </div>\n    </div>\n  );\n\n    /* variables */\n    const {\n        saveSliderImages, saveSliderImagesReset, saveSliderImagesState,\n        getSliderList, getSliderListReset, getSliderListState,\n        delSlider, delSliderReset, delSliderState,\n    } = props\n    const initial_values = {\n        banner_img: \"\",\n        m_banner_img: \"\",\n        sequence: 0,\n    }\n    const [formData, setFormData] = useState(initial_values)\n    const [redirect, setRedirect] = useState([false, ''])\n    const [banner_img, set_banner_img] = useState(null)\n    const [m_banner_img, set_m_banner_img] = useState(null)\n    const [submitLoading, setSubmitLoading] = useState(false)\n    const [refresh, setRefresh] = useState(0)\n    const columns = [\n        {\n            title: 'Image',\n            dataIndex: 'image',\n            key: 'image',\n            render: (image) => (<img src={`${cnf.s3_base_url}${image}`} alt=\"\" style={{ width: 100 }} />)\n        },\n        {\n            title: 'Mobile Image',\n            dataIndex: 'mobile_image',\n            key: 'mobile_image',\n            render: (mobile_image) => (<img src={`${cnf.s3_base_url}${mobile_image}`} alt=\"\" style={{ width: 100 }} />)\n        },\n        {\n            title: 'Sequence',\n            dataIndex: 'sequence',\n            key: 'sequence',\n        },\n        {\n            title: 'Action',\n            dataIndex: 'id',\n            key: 'action',\n            render: (id) => (\n                <Popconfirm\n                    title=\"Are you sure to delete this slider?\"\n                    onConfirm={() => delSlider({\n                        id: id,\n                    })}\n                    okText=\"Delete\"\n                    cancelText=\"Cancel\"\n                    okType=\"danger\"\n                >\n                    <Button size=\"small\" icon={<DeleteOutlined />} />\n                </Popconfirm>\n            )\n        }\n    ];\n    const [tableData, setTableData] = useState([])\n    const [form] = Form.useForm()\n\n    /* callbakcs */\n    useEffect(() => {\n        return (() => {\n            saveSliderImagesReset()\n            getSliderListReset()\n            delSliderReset()\n        })\n    }, [])\n\n    useEffect(() => {\n        getSliderList()\n    }, [refresh])\n\n    useEffect(() => {\n        if (saveSliderImagesState.apiState === \"success\") {\n            setRefresh(refresh + 1)\n            form.resetFields()\n            setFormData(initial_values)\n            setSubmitLoading(false)\n            message.success(saveSliderImagesState.message);\n        }\n\n        if (saveSliderImagesState.apiState === \"error\") {\n            saveSliderImagesReset()\n            setSubmitLoading(false)\n            message.error(saveSliderImagesState.message);\n        }\n    }, [saveSliderImagesState])\n\n\n    useEffect(() => {\n        if (delSliderState.apiState === \"success\") {\n            setRefresh(refresh + 1)\n            message.success(delSliderState.message);\n        }\n\n        if (delSliderState.apiState === \"error\") {\n            delSliderReset()\n            message.error(delSliderState.message);\n        }\n    }, [delSliderState])\n\n    useEffect(() => {\n        if (getSliderListState.apiState === \"success\") {\n            let ar = []\n            getSliderListState.list.map(obj => {\n                ar.push({\n                    key: obj.id,\n                    image: obj.image,\n                    mobile_image: obj.m_image,\n                    sequence: obj.sequence,\n                    id: obj.id,\n                })\n            })\n            setTableData(ar)\n        }\n    }, [getSliderListState])\n\n    /* functions */\n    const handleSubmit = async () => {\n        let banner_img_filename = uuidv4()\n        let m_banner_img_filename = uuidv4()\n\n        let bannerImageValRes = validateImageFile(banner_img)\n        let mBannerImageValRes = validateImageFile(m_banner_img)\n\n\n        if (!bannerImageValRes.status) {\n            alert(\"Banner Image's extension is not allowed.\")\n            return\n        }\n        if (!mBannerImageValRes.status) {\n            alert(\"Mobile Banner Image's extension is not allowed.\")\n            return\n        }\n\n        setSubmitLoading(true)\n\n        let s3UrlRes2 = await getS3SingedUrl(banner_img_filename, bannerImageValRes.ext, banner_img)\n        await axios.put(s3UrlRes2.url, banner_img)\n\n        let s3UrlRes3 = await getS3SingedUrl(m_banner_img_filename, mBannerImageValRes.ext, m_banner_img)\n        await axios.put(s3UrlRes3.url, m_banner_img)\n\n        formData.banner_img = `${banner_img_filename}.${bannerImageValRes.ext}`\n        formData.m_banner_img = `${m_banner_img_filename}.${mBannerImageValRes.ext}`\n\n        saveSliderImages(formData)\n    }\n\n\n\n\n\n    return (\n        <React.Fragment>{ redirect[0] && <Redirect to={redirect[1]} />}\n            <Header title=\"Home Page Sliders\"/>\n            <PageContainer>\n                <Form form={form} layout=\"vertical\" onFinish={handleSubmit} >\n                    <Row gutter=\"24\" >\n\n                        <Col span=\"8\">\n                            <div class=\"banner-image-container\">\n                                <Upload\n                                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                                    listType=\"picture-card\"\n                                    fileList={fileList}\n                                    onPreview={handlePreview}\n                                    onChange={handleChange}\n                                    accept=\"jpeg\"\n                                >{ fileList.length > 1 ? null : uploadButton}\n                                </Upload>\n                                <span>JPEG, JPG, PNG, WEBP | 3:2 Ratio  </span>\n                            </div>\n                        </Col>\n\n                        {/* <Col span=\"8\">\n                            <Form.Item\n                                label=\"Banner Image\"\n                                name=\"banner_img\"\n                                rules={[{ required: true, message: 'Required' }]}\n                                extra={<span>JPEG, JPG, PNG, WEBP | 4:1 Ratio  </span>}\n                            >\n                                <Input type=\"file\" name=\"m_banner_img\"\n                                    onChange={e => set_banner_img(e.target.files[0])}\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span=\"8\">\n                            <Form.Item\n                                label=\"Banner Image For Mobile\"\n                                name=\"m_banner_img\"\n                                rules={[{ required: true, message: 'Required' }]}\n                                extra={<span>JPEG, JPG, PNG, WEBP | 3:2 Ratio  </span>}\n                            >\n                                <Input type=\"file\" name=\"m_banner_img\"\n                                    onChange={e => set_m_banner_img(e.target.files[0])}\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span=\"4\">\n                            <Form.Item\n                                label=\"Sequence\"\n                                name=\"sequence\"\n                                rules={[{ required: true, message: 'Required' }]}\n                            >\n                                <InputNumber name=\"sequence\" placeholder=\"Enter Sequence\"\n                                    style={{ width: \"100%\" }}\n                                    onChange={v => setFormData({ ...formData, [\"sequence\"]: v })}\n                                />\n                            </Form.Item>\n                        </Col> */}\n                    </Row>\n                    <Button type=\"primary\" htmlType=\"submit\" loading={submitLoading} >SUBMIT</Button>\n                </Form>\n\n                <Modal visible={previewVisible} title={previewTitle} footer={null} onCancel={handleCancel}>\n                    <img alt=\"example\" style={{ width: '100%',}} src={previewImage} />\n                </Modal><Divider />\n                \n                <Table dataSource={tableData} columns={columns} size=\"small\" pagination={false} />\n            </PageContainer>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    saveSliderImagesState: state.saveSliderImages,\n    getSliderListState: state.getSliderList,\n    delSliderState: state.delSlider,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    saveSliderImages: (params) => dispatch(saveSliderImages(params)),\n    saveSliderImagesReset: () => dispatch(saveSliderImagesReset()),\n    getSliderList: (params) => dispatch(getSliderList(params)),\n    getSliderListReset: () => dispatch(getSliderListReset()),\n    delSlider: (params) => dispatch(delSlider(params)),\n    delSliderReset: () => dispatch(delSliderReset()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeSlider)"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/kuldeep/Git Hub/Vemshala-Admin/src/page/OrderList/OrderList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Table, Space, Tag } from \"antd\";\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { CopyOutlined, EditOutlined } from \"@ant-design/icons\";\n/* custom component */\n\nimport Header from \"../../component/Header/Header\";\nimport { PageContainer } from \"../../component/Xcomponent\";\nimport { Indicator } from \"./OrderListStyle\";\n/* actions */\n\nimport { getOrderList, getOrderListReset } from \"../../action/getOrderListAction\";\n\nconst OrderList = props => {\n  /* variables */\n  const {\n    getOrderList,\n    getOrderListReset,\n    getOrderListState\n  } = props;\n  const [tableData, setTableData] = useState([]);\n  const columns = [{\n    title: 'Customer Name',\n    dataIndex: 'customer_name',\n    key: 'customer_name'\n  }, // {\n  //     title: 'Email',\n  //     dataIndex: 's_email',\n  //     key: 's_email',\n  //     render: s_email => <span>{s_email}</span>\n  // },\n  {\n    title: 'Phone',\n    dataIndex: 's_phone',\n    key: 's_phone',\n    render: s_phone => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 32\n      }\n    }, s_phone)\n  }, {\n    title: 'Order No',\n    dataIndex: 'order_no',\n    key: 'order_no',\n    render: order_no => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 33\n      }\n    }, order_no)\n  }, {\n    title: 'Order Date',\n    dataIndex: 'order_date',\n    key: 'order_date',\n    render: order_date => {\n      var date = new Date(order_date);\n      var month = date.getMonth() + 1; //months (0-11)\n\n      var day = date.getDate(); //day (1-31)\n\n      var year = date.getFullYear();\n      var formattedDate = month + \"/\" + day + \"/\" + year;\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, formattedDate);\n    }\n  }, {\n    title: 'Total Amount',\n    dataIndex: 'total',\n    key: 'total',\n    render: obj => /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 30\n      }\n    }, obj.payment_type == \"USD\" ? /*#__PURE__*/React.createElement(React.Fragment, null, \"$\") : /*#__PURE__*/React.createElement(React.Fragment, null, \"\\u20B9\"), obj.total)\n  }, {\n    title: 'Status',\n    dataIndex: 'status',\n    key: 'status',\n    render: status => {\n      if (status == \"processing\") return /*#__PURE__*/React.createElement(Tag, {\n        color: \"#e39f19\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }, status.toUpperCase());\n      if (status == \"shipped\") return /*#__PURE__*/React.createElement(Tag, {\n        color: \"#1973e3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }\n      }, status.toUpperCase());\n      if (status == \"delivered\") return /*#__PURE__*/React.createElement(Tag, {\n        color: \"#87d068\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }\n      }, status.toUpperCase());\n      if (status == \"cancelled\") return /*#__PURE__*/React.createElement(Tag, {\n        color: \"#d93a3a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }\n      }, status.toUpperCase());\n    }\n  }, {\n    title: 'Action',\n    dataIndex: 'id',\n    key: 'action',\n    render: id => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n      to: `/order/${id}/details`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      icon: /*#__PURE__*/React.createElement(CopyOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 82\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 55\n      }\n    })), \" \\xA0\", /*#__PURE__*/React.createElement(Link, {\n      to: `/order/${id}/update`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      icon: /*#__PURE__*/React.createElement(EditOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 81\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 54\n      }\n    })))\n  }];\n  /* callbacks */\n\n  useEffect(() => {\n    getOrderList();\n  }, []);\n  useEffect(() => {\n    if (getOrderListState.apiState === \"success\") {\n      let tableData = [];\n      getOrderListState.list.map(row => {\n        tableData.push({\n          key: row.id,\n          customer_name: row.s_fname + ' ' + row.s_lname,\n          s_email: row.s_email,\n          s_phone: row.s_phone,\n          order_no: row.order_no,\n          order_date: row.order_date,\n          total: {\n            \"total\": row.total,\n            \"payment_type\": row.payment_type\n          },\n          status: row.status,\n          id: row.id\n        });\n      });\n      setTableData(tableData);\n    }\n  }, [getOrderListState]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    title: \"Order List\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PageContainer, {\n    list: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    dataSource: tableData,\n    columns: columns,\n    size: \"small\",\n    pagination: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  getOrderListState: state.getOrderList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getOrderList: params => dispatch(getOrderList(params)),\n  getOrderListReset: () => dispatch(getOrderListReset())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderList);","map":{"version":3,"names":["React","useEffect","useState","Button","Table","Space","Tag","Link","connect","CopyOutlined","EditOutlined","Header","PageContainer","Indicator","getOrderList","getOrderListReset","OrderList","props","getOrderListState","tableData","setTableData","columns","title","dataIndex","key","render","s_phone","order_no","order_date","date","Date","month","getMonth","day","getDate","year","getFullYear","formattedDate","obj","payment_type","total","status","toUpperCase","id","apiState","list","map","row","push","customer_name","s_fname","s_lname","s_email","mapStateToProps","state","mapDispatchToProps","dispatch","params"],"sources":["/home/kuldeep/Git Hub/Vemshala-Admin/src/page/OrderList/OrderList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Button, Table, Space, Tag } from \"antd\"\nimport { Link } from 'react-router-dom'\nimport { connect } from \"react-redux\"\nimport { CopyOutlined, EditOutlined } from \"@ant-design/icons\"\n\n/* custom component */\nimport Header from \"../../component/Header/Header\"\nimport { PageContainer } from \"../../component/Xcomponent\"\nimport { Indicator } from \"./OrderListStyle\"\n\n/* actions */\nimport { getOrderList, getOrderListReset } from \"../../action/getOrderListAction\"\n\n\nconst OrderList = props => {\n    /* variables */\n    const { getOrderList, getOrderListReset, getOrderListState } = props\n    const [tableData, setTableData] = useState([])\n    const columns = [\n        {\n            title: 'Customer Name',\n            dataIndex: 'customer_name',\n            key: 'customer_name',\n        },\n        // {\n        //     title: 'Email',\n        //     dataIndex: 's_email',\n        //     key: 's_email',\n        //     render: s_email => <span>{s_email}</span>\n        // },\n        {\n            title: 'Phone',\n            dataIndex: 's_phone',\n            key: 's_phone',\n            render: s_phone => <span>{s_phone}</span>\n        },\n        {\n            title: 'Order No',\n            dataIndex: 'order_no',\n            key: 'order_no',\n            render: order_no => <span>{order_no}</span>\n        },\n        {\n            title: 'Order Date',\n            dataIndex: 'order_date',\n            key: 'order_date',\n            render: (order_date) => {\n                var date = new Date(order_date);\n                var month = date.getMonth() +1;//months (0-11)\n                var day = date.getDate();//day (1-31)\n                var year = date.getFullYear();\n\n                var formattedDate = month + \"/\" + day + \"/\" + year;\n                return (\n                    <span>{formattedDate}</span>\n                )\n            }\n        },\n        {\n            title: 'Total Amount',\n            dataIndex: 'total',\n            key: 'total',\n            render: (obj) => <span>{obj.payment_type == \"USD\" ? <>$</> : <>₹</>}{obj.total}</span>\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            key: 'status',\n            render: status => {\n                if (status == \"processing\")\n                    return (<Tag color=\"#e39f19\">{status.toUpperCase()}</Tag>)\n\n                if (status == \"shipped\")\n                    return (<Tag color=\"#1973e3\">{status.toUpperCase()}</Tag>)\n\n                if (status == \"delivered\")\n                    return (<Tag color=\"#87d068\">{status.toUpperCase()}</Tag>)\n\n                if (status == \"cancelled\")\n                    return (<Tag color=\"#d93a3a\">{status.toUpperCase()}</Tag>)\n            }\n        },\n        {\n            title: 'Action',\n            dataIndex: 'id',\n            key: 'action',\n            render: (id) => (\n                <>\n                    <Link to={`/order/${id}/details`}><Button size=\"small\" icon={<CopyOutlined />} /></Link> &nbsp;\n                    <Link to={`/order/${id}/update`}><Button size=\"small\" icon={<EditOutlined />} /></Link>\n\n                </>\n            )\n        },\n    ];\n\n    /* callbacks */\n    useEffect(() => {\n        getOrderList()\n    }, [])\n\n    useEffect(() => {\n        if (getOrderListState.apiState === \"success\") {\n            let tableData = []\n            getOrderListState.list.map(row => {\n                tableData.push({\n                    key: row.id,\n                    customer_name: row.s_fname + ' ' + row.s_lname,\n                    s_email: row.s_email,\n                    s_phone: row.s_phone,\n                    order_no: row.order_no,\n                    order_date: row.order_date,\n                    total: { \"total\": row.total, \"payment_type\": row.payment_type, },\n                    status: row.status,\n                    id: row.id,\n                })\n            })\n            setTableData(tableData)\n        }\n    }, [getOrderListState])\n\n\n    return (\n        <>\n            <Header\n                title=\"Order List\"\n            />\n            <PageContainer list >\n                <Table dataSource={tableData} columns={columns} size=\"small\" pagination={false} />\n            </PageContainer>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    getOrderListState: state.getOrderList,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getOrderList: (params) => dispatch(getOrderList(params)),\n    getOrderListReset: () => dispatch(getOrderListReset()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderList)"],"mappings":"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"},"metadata":{},"sourceType":"module"}
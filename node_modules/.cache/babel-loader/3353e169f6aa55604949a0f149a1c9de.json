{"ast":null,"code":"var _jsxFileName = \"/home/kuldeep/Git Hub/Vemshala-Admin/src/page/ProductEdit/ProductEdit.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Row, Col, Select, Button, Input, InputNumber, message, TreeSelect, Switch } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n/* custom component */\n\nimport Header from \"../../component/Header/Header\";\nimport { PageContainer } from \"../../component/Xcomponent\";\nimport ProductTabs from \"../../component/ProductTabs/ProductTabs\";\n/* actions */\n\nimport { getProductView, getProductViewReset } from \"../../action/getProductViewAction\";\nimport { updateProduct, updateProductReset } from \"../../action/updateProductAction\";\nimport { getCategoryTree, getCategoryTreeReset } from \"../../action/getCategoryTreeAction\";\nconst {\n  TreeNode\n} = TreeSelect;\n\nconst ProductEdit = props => {\n  /* variables */\n  const product_id = props.match.params.product_id;\n  const {\n    getProductView,\n    getProductViewReset,\n    getProductViewState,\n    updateProduct,\n    updateProductReset,\n    updateProductState,\n    getCategoryTree,\n    getCategoryTreeReset,\n    getCategoryTreeState\n  } = props;\n  const [redirect, setRedirect] = useState([false, '']);\n  const [form] = Form.useForm();\n  const [formData, setFormData] = useState({\n    product_id: product_id,\n    type: \"\",\n    status: \"enabled\",\n    name: \"\",\n    url_key: \"\",\n    price: \"\",\n    is_sale_price: \"\",\n    sale_price: \"\",\n    categories: [],\n    is_exclusive: \"no\",\n    sku: \"\",\n    short_description: \"\",\n    tags: \"\",\n    stock: \"\",\n    gst: \"\"\n  });\n  /* callbacks */\n\n  useEffect(() => {\n    return () => {\n      getProductViewReset();\n      updateProductReset();\n      getCategoryTreeReset();\n    };\n  }, []);\n  useEffect(() => {\n    getCategoryTree();\n    getProductView({\n      product_id: product_id\n    });\n  }, []);\n  useEffect(() => {\n    if (getProductViewState.apiState === \"success\") {\n      form.setFieldsValue({\n        type: getProductViewState.product.type,\n        status: getProductViewState.product.status,\n        name: getProductViewState.product.name,\n        url_key: getProductViewState.product.url_key,\n        price: getProductViewState.product.price,\n        is_sale_price: getProductViewState.product.is_sale_price,\n        sale_price: getProductViewState.product.sale_price,\n        categories: getProductViewState.product.categories,\n        sku: getProductViewState.product.sku,\n        short_description: getProductViewState.product.short_description,\n        tags: getProductViewState.product.tags,\n        stock: getProductViewState.product.stock,\n        gst: getProductViewState.product.gst\n      });\n      setFormData({ ...formData,\n        ['type']: getProductViewState.product.type,\n        ['status']: getProductViewState.product.status,\n        ['name']: getProductViewState.product.name,\n        ['url_key']: getProductViewState.product.url_key,\n        ['price']: getProductViewState.product.price,\n        ['is_sale_price']: getProductViewState.product.is_sale_price,\n        ['sale_price']: getProductViewState.product.sale_price,\n        ['categories']: getProductViewState.product.categories,\n        ['is_exclusive']: getProductViewState.product.is_exclusive,\n        ['sku']: getProductViewState.product.sku,\n        ['short_description']: getProductViewState.product.short_description,\n        ['tags']: getProductViewState.product.tags,\n        ['stock']: getProductViewState.product.stock,\n        ['gst']: getProductViewState.product.gst\n      });\n    }\n  }, [getProductViewState]);\n  useEffect(() => {\n    if (updateProductState.apiState === \"success\") {\n      setRedirect([true, '/product/list']);\n      message.success(updateProductState.message);\n    }\n\n    if (updateProductState.apiState === \"error\") {\n      updateProductReset();\n      message.error(updateProductState.message);\n    }\n  }, [updateProductState]);\n  /* functions */\n\n  const categoryOptions = tree => {\n    let finalJsx = [];\n    tree.map(node => {\n      if (node.children.length > 0) {\n        finalJsx.push( /*#__PURE__*/React.createElement(TreeNode, {\n          value: node.id,\n          title: node.name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }\n        }, categoryOptions(node.children)));\n      } else {\n        finalJsx.push( /*#__PURE__*/React.createElement(TreeNode, {\n          value: node.id,\n          title: node.name,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }\n        }));\n      }\n    });\n    return finalJsx;\n  };\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleNumberChange = (name, value) => {\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  const handleSelect = (name, value) => {\n    setFormData({ ...formData,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = () => {\n    updateProduct(formData);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, redirect[0] && /*#__PURE__*/React.createElement(Redirect, {\n    to: redirect[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    title: \"Edit Product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, getProductViewState.apiState === \"success\" && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductTabs, {\n    id: getProductViewState.product.id,\n    active: \"basic_info\",\n    type: getProductViewState.product.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    layout: \"vertical\",\n    form: form,\n    onFinish: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 6,\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Product Type\",\n    name: \"type\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    name: \"type\",\n    placeholder: \"Select Product Type\",\n    onSelect: v => handleNumberChange(\"type\", v),\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Select.Option, {\n    key: \"simple\",\n    value: \"simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 45\n    }\n  }, \"Simple\"), /*#__PURE__*/React.createElement(Select.Option, {\n    key: \"variant\",\n    value: \"variant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 45\n    }\n  }, \"Variant\")))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 6,\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Status\",\n    name: \"status\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    name: \"status\",\n    placeholder: \"Select Status\",\n    onSelect: v => handleNumberChange(\"status\", v),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Select.Option, {\n    key: \"enabled\",\n    value: \"enabled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 45\n    }\n  }, \"Enabled\"), /*#__PURE__*/React.createElement(Select.Option, {\n    key: \"disabled\",\n    value: \"disabled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 45\n    }\n  }, \"Disabled\")))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 6,\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"SKU\",\n    name: \"sku\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"sku\",\n    placeholder: \"Enter SKU\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 41\n    }\n  }))), getProductViewState.product.type === \"simple\" && /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 6,\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Stock\",\n    name: \"stock\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    name: \"stock\",\n    placeholder: \"Enter Stock\",\n    onChange: v => handleNumberChange(\"stock\", v),\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 12,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Name\",\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"name\",\n    placeholder: \"Enter Name\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 12,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"URL key\",\n    name: \"url_key\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }, {\n      pattern: new RegExp('^[a-zA-Z0-9-.]+$'),\n      message: \"This field must be a valid url. It should only contain alphanumeric character, dash(-) and dot(.)\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"url_key\",\n    placeholder: \"Enter URL key\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 6,\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Price\",\n    name: \"price\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    name: \"price\",\n    placeholder: \"Enter Price\",\n    style: {\n      width: \"100%\"\n    },\n    min: 0,\n    onChange: v => handleNumberChange(\"price\", v),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 6,\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Set Sale Price\",\n    name: \"is_sale_price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    name: \"is_sale_price\",\n    placeholder: \"Select Sale Price Rule\",\n    defaultValue: \"no\",\n    onSelect: v => handleNumberChange(\"is_sale_price\", v),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Select.Option, {\n    key: \"yes\",\n    value: \"yes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 45\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(Select.Option, {\n    key: \"no\",\n    value: \"no\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 45\n    }\n  }, \"No\")))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 6,\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Sale Price\",\n    name: \"sale_price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    name: \"sale_price\",\n    placeholder: \"Enter Sale Price\",\n    style: {\n      width: \"100%\"\n    },\n    min: 0,\n    onChange: v => handleNumberChange(\"sale_price\", v),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 6,\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"GST\",\n    name: \"gst\",\n    rules: [{\n      required: true,\n      message: 'Required'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    name: \"gst\",\n    placeholder: \"Select GST\",\n    defaultValue: \"Select GST\",\n    onSelect: v => handleNumberChange(\"gst\", v),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Select.Option, {\n    key: \"5\",\n    value: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 45\n    }\n  }, \"5\"), /*#__PURE__*/React.createElement(Select.Option, {\n    key: \"12\",\n    value: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 45\n    }\n  }, \"12\"), /*#__PURE__*/React.createElement(Select.Option, {\n    key: \"18\",\n    value: \"18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 45\n    }\n  }, \"18\"), /*#__PURE__*/React.createElement(Select.Option, {\n    key: \"28\",\n    value: \"28\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 45\n    }\n  }, \"28\")))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 6,\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Meta Keyword\",\n    name: \"meta_keyword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    name: \"meta_keyword\",\n    placeholder: \"Enter product keyword\",\n    style: {\n      width: \"100%\"\n    },\n    min: 0,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 6,\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Meta Description\",\n    name: \"meta_description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    name: \"meta_description\",\n    placeholder: \"Enter product description\",\n    style: {\n      width: \"100%\"\n    },\n    min: 0,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 6,\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Meta Keyword\",\n    name: \"meta_keyword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    name: \"meta_keyword\",\n    placeholder: \"Enter product keyword\",\n    style: {\n      width: \"100%\"\n    },\n    min: 0,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 12,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Categories\",\n    name: \"categories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TreeSelect, {\n    showSearch: true,\n    filterTreeNode: (input, treeNode) => treeNode.title.toLowerCase().indexOf(input.toLowerCase()) >= 0,\n    style: {\n      width: '100%'\n    },\n    dropdownStyle: {\n      maxHeight: 400,\n      overflow: 'auto'\n    },\n    placeholder: \"Select categories\",\n    allowClear: true,\n    multiple: true,\n    treeDefaultExpandAll: true,\n    onChange: (value, node) => handleSelect(\"categories\", value),\n    showCheckedStrategy: TreeSelect.SHOW_ALL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 41\n    }\n  }, categoryOptions(getCategoryTreeState.tree)))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 6,\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Is Exclusive?\",\n    name: \"is_exclusive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    name: \"is_exclusive\",\n    checkedChildren: \"Yes\",\n    unCheckedChildren: \"No\",\n    onChange: checked => setFormData({ ...formData,\n      ['is_exclusive']: checked ? \"yes\" : \"no\"\n    }),\n    defaultChecked: getProductViewState.product.is_exclusive === \"yes\" ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 12,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Short Description\",\n    name: \"short_description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input.TextArea, {\n    name: \"short_description\",\n    placeholder: \"Enter Short Description\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    xs: 24,\n    sm: 24,\n    md: 12,\n    lg: 12,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Tags (comma separted)\",\n    name: \"tags\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Input.TextArea, {\n    name: \"tags\",\n    placeholder: \"Enter comma separted Tags\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: updateProductState.apiState === \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 29\n    }\n  }, \"SUBMIT\")))));\n};\n\nconst mapStateToProps = state => ({\n  getProductViewState: state.getProductView,\n  updateProductState: state.updateProduct,\n  getCategoryTreeState: state.getCategoryTree\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getProductView: params => dispatch(getProductView(params)),\n  getProductViewReset: () => dispatch(getProductViewReset()),\n  updateProduct: params => dispatch(updateProduct(params)),\n  updateProductReset: () => dispatch(updateProductReset()),\n  getCategoryTree: params => dispatch(getCategoryTree(params)),\n  getCategoryTreeReset: () => dispatch(getCategoryTreeReset())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductEdit);","map":{"version":3,"sources":["/home/kuldeep/Git Hub/Vemshala-Admin/src/page/ProductEdit/ProductEdit.js"],"names":["React","useState","useEffect","Form","Row","Col","Select","Button","Input","InputNumber","message","TreeSelect","Switch","connect","Redirect","Header","PageContainer","ProductTabs","getProductView","getProductViewReset","updateProduct","updateProductReset","getCategoryTree","getCategoryTreeReset","TreeNode","ProductEdit","props","product_id","match","params","getProductViewState","updateProductState","getCategoryTreeState","redirect","setRedirect","form","useForm","formData","setFormData","type","status","name","url_key","price","is_sale_price","sale_price","categories","is_exclusive","sku","short_description","tags","stock","gst","apiState","setFieldsValue","product","success","error","categoryOptions","tree","finalJsx","map","node","children","length","push","id","handleChange","e","target","value","handleNumberChange","handleSelect","handleSubmit","required","v","width","pattern","RegExp","input","treeNode","title","toLowerCase","indexOf","maxHeight","overflow","SHOW_ALL","checked","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Form, Row, Col, Select, Button, Input, InputNumber, message, TreeSelect, Switch } from \"antd\"\nimport { connect } from \"react-redux\"\nimport { Redirect } from \"react-router-dom\"\n\n/* custom component */\nimport Header from \"../../component/Header/Header\"\nimport { PageContainer } from \"../../component/Xcomponent\"\nimport ProductTabs from \"../../component/ProductTabs/ProductTabs\"\n\n/* actions */\nimport { getProductView, getProductViewReset } from \"../../action/getProductViewAction\"\nimport { updateProduct, updateProductReset } from \"../../action/updateProductAction\"\nimport { getCategoryTree, getCategoryTreeReset } from \"../../action/getCategoryTreeAction\"\n\nconst { TreeNode } = TreeSelect\n\n\n\nconst ProductEdit = props => {\n    /* variables */\n    const product_id = props.match.params.product_id\n    const {\n        getProductView, getProductViewReset, getProductViewState,\n        updateProduct, updateProductReset, updateProductState,\n        getCategoryTree, getCategoryTreeReset, getCategoryTreeState,\n    } = props\n    const [redirect, setRedirect] = useState([false, ''])\n    const [form] = Form.useForm()\n    const [formData, setFormData] = useState({\n        product_id: product_id,\n        type: \"\",\n        status: \"enabled\",\n        name: \"\",\n        url_key: \"\",\n        price: \"\",\n        is_sale_price: \"\",\n        sale_price: \"\",\n        categories: [],\n        is_exclusive: \"no\",\n        sku: \"\",\n        short_description: \"\",\n        tags: \"\",\n        stock: \"\",\n        gst: \"\",\n    })\n\n    /* callbacks */\n    useEffect(() => {\n        return (() => {\n            getProductViewReset()\n            updateProductReset()\n            getCategoryTreeReset()\n        })\n    }, [])\n\n\n    useEffect(() => {\n        getCategoryTree()\n        getProductView({\n            product_id: product_id\n        })\n    }, [])\n\n    useEffect(() => {\n        if (getProductViewState.apiState === \"success\") {\n            form.setFieldsValue({\n                type: getProductViewState.product.type,\n                status: getProductViewState.product.status,\n                name: getProductViewState.product.name,\n                url_key: getProductViewState.product.url_key,\n                price: getProductViewState.product.price,\n                is_sale_price: getProductViewState.product.is_sale_price,\n                sale_price: getProductViewState.product.sale_price,\n                categories: getProductViewState.product.categories,\n                sku: getProductViewState.product.sku,\n                short_description: getProductViewState.product.short_description,\n                tags: getProductViewState.product.tags,\n                stock: getProductViewState.product.stock,\n                gst: getProductViewState.product.gst,\n            })\n            setFormData({\n                ...formData,\n                ['type']: getProductViewState.product.type,\n                ['status']: getProductViewState.product.status,\n                ['name']: getProductViewState.product.name,\n                ['url_key']: getProductViewState.product.url_key,\n                ['price']: getProductViewState.product.price,\n                ['is_sale_price']: getProductViewState.product.is_sale_price,\n                ['sale_price']: getProductViewState.product.sale_price,\n                ['categories']: getProductViewState.product.categories,\n                ['is_exclusive']: getProductViewState.product.is_exclusive,\n                ['sku']: getProductViewState.product.sku,\n                ['short_description']: getProductViewState.product.short_description,\n                ['tags']: getProductViewState.product.tags,\n                ['stock']: getProductViewState.product.stock,\n                ['gst']: getProductViewState.product.gst,\n            })\n        }\n    }, [getProductViewState])\n\n    useEffect(() => {\n        if (updateProductState.apiState === \"success\") {\n            setRedirect([true, '/product/list'])\n            message.success(updateProductState.message);\n        }\n\n        if (updateProductState.apiState === \"error\") {\n            updateProductReset()\n            message.error(updateProductState.message);\n        }\n    }, [updateProductState])\n\n    /* functions */\n    const categoryOptions = (tree) => {\n        let finalJsx = []\n        tree.map(node => {\n            if (node.children.length > 0) {\n                finalJsx.push(\n                    <TreeNode value={node.id} title={node.name}>{categoryOptions(node.children)}</TreeNode>\n                )\n            } else {\n                finalJsx.push(\n                    <TreeNode value={node.id} title={node.name} />\n                )\n            }\n        })\n        return finalJsx\n    }\n\n    const handleChange = e => {\n        setFormData({ ...formData, [e.target.name]: e.target.value })\n    }\n\n    const handleNumberChange = (name, value) => {\n        setFormData({ ...formData, [name]: value })\n    }\n\n    const handleSelect = (name, value) => {\n        setFormData({ ...formData, [name]: value })\n    }\n\n    const handleSubmit = () => {\n        updateProduct(formData)\n    }\n\n    return (\n        <>\n            {redirect[0] &&\n                <Redirect to={redirect[1]} />}\n\n            <Header\n                title=\"Edit Product\"\n            />\n            <PageContainer>\n                {getProductViewState.apiState === \"success\" &&\n                    <>\n                        <ProductTabs id={getProductViewState.product.id} active=\"basic_info\" type={getProductViewState.product.type} />\n                        <Form layout=\"vertical\" form={form} onFinish={handleSubmit} >\n                            <Row gutter={20}>\n                                <Col xs={24} sm={24} md={12} lg={6} xl={6}>\n                                    <Form.Item\n                                        label=\"Product Type\"\n                                        name=\"type\"\n                                        rules={[{ required: true, message: 'Required' }]}\n                                    >\n                                        <Select name=\"type\" placeholder=\"Select Product Type\"\n                                            onSelect={v => handleNumberChange(\"type\", v)}\n                                            disabled\n                                        >\n                                            <Select.Option key=\"simple\" value=\"simple\">Simple</Select.Option>\n                                            <Select.Option key=\"variant\" value=\"variant\">Variant</Select.Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={12} lg={6} xl={6}>\n                                    <Form.Item\n                                        label=\"Status\"\n                                        name=\"status\"\n                                        rules={[{ required: true, message: 'Required' }]}\n                                    >\n                                        <Select name=\"status\" placeholder=\"Select Status\"\n                                            onSelect={v => handleNumberChange(\"status\", v)}\n                                        >\n                                            <Select.Option key=\"enabled\" value=\"enabled\" >Enabled</Select.Option>\n                                            <Select.Option key=\"disabled\" value=\"disabled\">Disabled</Select.Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={12} lg={6} xl={6}>\n                                    <Form.Item\n                                        label=\"SKU\"\n                                        name=\"sku\"\n                                    >\n                                        <Input name=\"sku\" placeholder=\"Enter SKU\"\n                                            onChange={handleChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                {getProductViewState.product.type === \"simple\" &&\n                                    <Col xs={24} sm={24} md={12} lg={6} xl={6}>\n                                        <Form.Item\n                                            label=\"Stock\"\n                                            name=\"stock\"\n                                        >\n                                            <InputNumber name=\"stock\" placeholder=\"Enter Stock\"\n                                                onChange={v => handleNumberChange(\"stock\", v)}\n                                                style={{ width: \"100%\" }}\n                                            />\n                                        </Form.Item>\n                                    </Col>\n                                }\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                                    <Form.Item\n                                        label=\"Name\"\n                                        name=\"name\"\n                                        rules={[{ required: true, message: 'Required' }]}\n                                    >\n                                        <Input name=\"name\" placeholder=\"Enter Name\"\n                                            onChange={handleChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                                    <Form.Item\n                                        label=\"URL key\"\n                                        name=\"url_key\"\n                                        rules={[\n                                            { required: true, message: 'Required' },\n                                            {\n                                                pattern: new RegExp('^[a-zA-Z0-9-.]+$'),\n                                                message: \"This field must be a valid url. It should only contain alphanumeric character, dash(-) and dot(.)\"\n                                            }\n                                        ]}\n                                    >\n                                        <Input name=\"url_key\" placeholder=\"Enter URL key\"\n                                            onChange={handleChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={12} lg={6} xl={6}>\n                                    <Form.Item\n                                        label=\"Price\"\n                                        name=\"price\"\n                                        rules={[{ required: true, message: 'Required' }]}\n                                    >\n                                        <InputNumber name=\"price\" placeholder=\"Enter Price\" style={{ width: \"100%\" }} min={0}\n                                            onChange={v => handleNumberChange(\"price\", v)}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={12} lg={6} xl={6}>\n                                    <Form.Item\n                                        label=\"Set Sale Price\"\n                                        name=\"is_sale_price\"\n                                    >\n                                        <Select name=\"is_sale_price\" placeholder=\"Select Sale Price Rule\" defaultValue=\"no\"\n                                            onSelect={v => handleNumberChange(\"is_sale_price\", v)}\n                                        >\n                                            <Select.Option key=\"yes\" value=\"yes\">Yes</Select.Option>\n                                            <Select.Option key=\"no\" value=\"no\">No</Select.Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={12} lg={6} xl={6}>\n                                    <Form.Item\n                                        label=\"Sale Price\"\n                                        name=\"sale_price\"\n                                    >\n                                        <InputNumber name=\"sale_price\" placeholder=\"Enter Sale Price\" style={{ width: \"100%\" }} min={0}\n                                            onChange={v => handleNumberChange(\"sale_price\", v)}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={12} lg={6} xl={6}>\n                                    <Form.Item\n                                        label=\"GST\"\n                                        name=\"gst\"\n                                        rules={[{ required: true, message: 'Required' }]}\n                                    >\n                                        <Select name=\"gst\" placeholder=\"Select GST\" defaultValue=\"Select GST\"\n                                            onSelect={v => handleNumberChange(\"gst\", v)}\n                                        >\n                                            <Select.Option key=\"5\" value=\"5\">5</Select.Option>\n                                            <Select.Option key=\"12\" value=\"12\">12</Select.Option>\n                                            <Select.Option key=\"18\" value=\"18\">18</Select.Option>\n                                            <Select.Option key=\"28\" value=\"28\">28</Select.Option>\n                                        </Select>\n                                    </Form.Item>\n                                </Col>\n\n                                <Col xs={24} sm={24} md={12} lg={6} xl={6}>\n                                    <Form.Item\n                                        label=\"Meta Keyword\"\n                                        name=\"meta_keyword\"\n                                    >\n                                        <InputNumber name=\"meta_keyword\" placeholder=\"Enter product keyword\" style={{ width: \"100%\" }} min={0}\n                                            onChange={handleChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n\n                                <Col xs={24} sm={24} md={12} lg={6} xl={6}>\n                                    <Form.Item\n                                        label=\"Meta Description\"\n                                        name=\"meta_description\"\n                                    >\n                                        <InputNumber name=\"meta_description\" placeholder=\"Enter product description\" style={{ width: \"100%\" }} min={0}\n                                            onChange={handleChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n\n                                <Col xs={24} sm={24} md={12} lg={6} xl={6}>\n                                    <Form.Item\n                                        label=\"Meta Keyword\"\n                                        name=\"meta_keyword\"\n                                    >\n                                        <InputNumber name=\"meta_keyword\" placeholder=\"Enter product keyword\" style={{ width: \"100%\" }} min={0}\n                                            onChange={handleChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n\n\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                                    <Form.Item\n                                        label=\"Categories\"\n                                        name=\"categories\"\n                                    >\n                                        <TreeSelect\n                                            showSearch\n                                            filterTreeNode={(input, treeNode) =>\n                                                treeNode.title.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                            }\n                                            style={{ width: '100%' }}\n                                            dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\n                                            placeholder=\"Select categories\"\n                                            allowClear\n                                            multiple\n                                            treeDefaultExpandAll\n                                            onChange={(value, node) => handleSelect(\"categories\", value)}\n                                            showCheckedStrategy={TreeSelect.SHOW_ALL}\n                                        >\n                                            {categoryOptions(getCategoryTreeState.tree)}\n                                        </TreeSelect>\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={12} lg={6} xl={6}>\n                                    <Form.Item\n                                        label=\"Is Exclusive?\"\n                                        name=\"is_exclusive\"\n                                    >\n                                        <Switch name=\"is_exclusive\" checkedChildren=\"Yes\" unCheckedChildren=\"No\"\n                                            onChange={checked => setFormData({ ...formData, ['is_exclusive']: checked ? \"yes\" : \"no\" })}\n                                            defaultChecked={getProductViewState.product.is_exclusive === \"yes\" ? true : false}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                                    <Form.Item\n                                        label=\"Short Description\"\n                                        name=\"short_description\"\n                                    >\n                                        <Input.TextArea name=\"short_description\" placeholder=\"Enter Short Description\"\n                                            onChange={handleChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                                <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                                    <Form.Item\n                                        label=\"Tags (comma separted)\"\n                                        name=\"tags\"\n                                    >\n                                        <Input.TextArea name=\"tags\" placeholder=\"Enter comma separted Tags\"\n                                            onChange={handleChange}\n                                        />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n\n                            <Button type=\"primary\" htmlType=\"submit\" loading={updateProductState.apiState === \"loading\"} >SUBMIT</Button>\n                        </Form>\n                    </>\n                }\n            </PageContainer>\n        </>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    getProductViewState: state.getProductView,\n    updateProductState: state.updateProduct,\n    getCategoryTreeState: state.getCategoryTree,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getProductView: (params) => dispatch(getProductView(params)),\n    getProductViewReset: () => dispatch(getProductViewReset()),\n    updateProduct: (params) => dispatch(updateProduct(params)),\n    updateProductReset: () => dispatch(updateProductReset()),\n    getCategoryTree: (params) => dispatch(getCategoryTree(params)),\n    getCategoryTreeReset: () => dispatch(getCategoryTreeReset()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductEdit)"]},"metadata":{},"sourceType":"module"}